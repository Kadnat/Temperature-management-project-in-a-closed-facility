Version 4.0 HI-TECH Software Intermediate Code
"45 SD_PIC.c
[; ;SD_PIC.c: 45: SDCard_t SDCard = {0};
[c E2692 0 1 2 .. ]
[n E2692 . TYPE_SDSC TYPE_SDHC_SDXC TYPE_MMC  ]
"101 ./SD_PIC.h
[; ;./SD_PIC.h: 101:     struct{
[s S272 `ul 1 `ul 1 `uc 1 ]
[n S272 . lastBlockWritten MBW_startBlock MBW_flag_first ]
"108
[; ;./SD_PIC.h: 108:     struct{
[s S273 `ul 1 `ul 1 `uc 1 ]
[n S273 . lastBlockRead MBR_startBlock MBR_flag_first ]
"84
[; ;./SD_PIC.h: 84: typedef struct{
[s S271 `uc 1 `E2692 1 `uc 1 `us 1 `ul 1 `uc 1 `uc 1 `ul 1 `us 1 `uc 1 `us 1 `ul 1 `d 1 `uc 1 `S272 1 `S273 1 ]
[n S271 . SDversion Type MID OID PHML PHMH PRV PSN MDT CRC blockSize numBlocks size init write read ]
"47 ./SPI_PIC.h
[; ;./SPI_PIC.h: 47: void spiSend(unsigned char val);
[v _spiSend `(v ~T0 @X0 0 ef1`uc ]
"1334 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1334:     struct {
[s S55 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S55 . LATE0 LATE1 LATE2 ]
"1339
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1339:     struct {
[s S56 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S56 . LE0 LE1 LE2 ]
"1333
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1333: typedef union {
[u S54 `S55 1 `S56 1 ]
[n S54 . . . ]
"1345
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1345: extern volatile LATEbits_t LATEbits __attribute__((address(0xF8D)));
[v _LATEbits `VS54 ~T0 @X0 0 e@3981 ]
"41 ./SPI_PIC.h
[; ;./SPI_PIC.h: 41: unsigned char spiReceive(void);
[v _spiReceive `(uc ~T0 @X0 0 ef ]
"35
[; ;./SPI_PIC.h: 35: unsigned char spiTransfer(unsigned char byteToSend);
[v _spiTransfer `(uc ~T0 @X0 0 ef1`uc ]
"5779 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5779: extern volatile unsigned char OSCCON __attribute__((address(0xFD3)));
[v _OSCCON `Vuc ~T0 @X0 0 e@4051 ]
"2432
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2432: extern volatile unsigned char OSCTUNE __attribute__((address(0xF9B)));
[v _OSCTUNE `Vuc ~T0 @X0 0 e@3995 ]
[v F192 `(v ~T0 @X0 1 tf1`ul ]
"12 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\builtins.h
[v __delay `JF192 ~T0 @X0 0 e ]
[p i __delay ]
"5785 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5785:     struct {
[s S247 :2 `uc 1 :1 `uc 1 :1 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S247 . SCS IOFS OSTS IRCF IDLEN ]
"5792
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5792:     struct {
[s S248 :1 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S248 . SCS0 SCS1 . IRCF0 IRCF1 IRCF2 ]
"5784
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5784: typedef union {
[u S246 `S247 1 `S248 1 ]
[n S246 . . . ]
"5801
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5801: extern volatile OSCCONbits_t OSCCONbits __attribute__((address(0xFD3)));
[v _OSCCONbits `VS246 ~T0 @X0 0 e@4051 ]
"55 ./SPI_PIC.h
[; ;./SPI_PIC.h: 55: void spiInit(unsigned char divider);
[v _spiInit `(v ~T0 @X0 0 ef1`uc ]
"2279 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2279:     struct {
[s S82 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S82 . TRISE0 TRISE1 TRISE2 . PSPMODE IBOV OBF IBF ]
"2289
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2289:     struct {
[s S83 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S83 . RE0 RE1 RE2 RE3 ]
"2278
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2278: typedef union {
[u S81 `S82 1 `S83 1 ]
[n S81 . . . ]
"2296
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2296: extern volatile TRISEbits_t TRISEbits __attribute__((address(0xF96)));
[v _TRISEbits `VS81 ~T0 @X0 0 e@3990 ]
"4737
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4737:     struct {
[s S190 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S190 . SSPM CKP SSPEN SSPOV WCOL ]
"4744
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4744:     struct {
[s S191 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S191 . SSPM0 SSPM1 SSPM2 SSPM3 ]
"4736
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4736: typedef union {
[u S189 `S190 1 `S191 1 ]
[n S189 . . . ]
"4751
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4751: extern volatile SSPCON1bits_t SSPCON1bits __attribute__((address(0xFC6)));
[v _SSPCON1bits `VS189 ~T0 @X0 0 e@4038 ]
"648 SD_PIC.c
[; ;SD_PIC.c: 648:             printf("SD init success!\r\n");
[v _printf `(i ~T0 @X0 0 e? ]
"20 ./common.h
[p x OSC  =  INTIO67          ]
"21
[p x FCMEN  =  OFF       ]
"22
[p x IESO  =  OFF        ]
"25
[p x PWRT  =  OFF        ]
"26
[p x BOREN  =  SBORDIS   ]
"27
[p x BORV  =  3          ]
"30
[p x WDT  =  OFF          ]
"31
[p x WDTPS  =  32768     ]
"34
[p x CCP2MX  =  PORTC    ]
"35
[p x PBADEN  =  ON       ]
"36
[p x LPT1OSC  =  OFF     ]
"37
[p x MCLRE  =  ON        ]
"40
[p x STVREN  =  ON       ]
"41
[p x LVP  =  ON          ]
"42
[p x XINST  =  OFF       ]
"45
[p x CP0  =  OFF         ]
"46
[p x CP1  =  OFF         ]
"47
[p x CP2  =  OFF         ]
"48
[p x CP3  =  OFF         ]
"51
[p x CPB  =  OFF         ]
"52
[p x CPD  =  OFF         ]
"55
[p x WRT0  =  OFF        ]
"56
[p x WRT1  =  OFF        ]
"57
[p x WRT2  =  OFF        ]
"58
[p x WRT3  =  OFF        ]
"61
[p x WRTC  =  OFF        ]
"62
[p x WRTB  =  OFF        ]
"63
[p x WRTD  =  OFF        ]
"66
[p x EBTR0  =  OFF       ]
"67
[p x EBTR1  =  OFF       ]
"68
[p x EBTR2  =  OFF       ]
"69
[p x EBTR3  =  OFF       ]
"72
[p x EBTRB  =  OFF       ]
"54 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 54: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"191
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 191: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"362
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 362: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"537
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 537: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"679
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 679: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"882
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 882: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"994
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 994: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"1106
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1106: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"1218
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1218: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"1330
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1330: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"1382
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1382: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"1387
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1387: __asm("DDRA equ 0F92h");
[; <" DDRA equ 0F92h ;# ">
"1604
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1604: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"1609
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1609: __asm("DDRB equ 0F93h");
[; <" DDRB equ 0F93h ;# ">
"1826
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1826: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"1831
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 1831: __asm("DDRC equ 0F94h");
[; <" DDRC equ 0F94h ;# ">
"2048
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2048: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"2053
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2053: __asm("DDRD equ 0F95h");
[; <" DDRD equ 0F95h ;# ">
"2270
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2270: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"2275
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2275: __asm("DDRE equ 0F96h");
[; <" DDRE equ 0F96h ;# ">
"2434
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2434: __asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2499: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2576: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2653: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2730: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2796: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2862: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2928: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 2994: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3001: __asm("EEDATA equ 0FA8h");
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3008: __asm("EEADR equ 0FA9h");
[; <" EEADR equ 0FA9h ;# ">
"3015
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3015: __asm("EEADRH equ 0FAAh");
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3022: __asm("RCSTA equ 0FABh");
[; <" RCSTA equ 0FABh ;# ">
"3027
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3027: __asm("RCSTA1 equ 0FABh");
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3232: __asm("TXSTA equ 0FACh");
[; <" TXSTA equ 0FACh ;# ">
"3237
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3237: __asm("TXSTA1 equ 0FACh");
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3488: __asm("TXREG equ 0FADh");
[; <" TXREG equ 0FADh ;# ">
"3493
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3493: __asm("TXREG1 equ 0FADh");
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3500: __asm("RCREG equ 0FAEh");
[; <" RCREG equ 0FAEh ;# ">
"3505
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3505: __asm("RCREG1 equ 0FAEh");
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3512: __asm("SPBRG equ 0FAFh");
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3517: __asm("SPBRG1 equ 0FAFh");
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3524: __asm("SPBRGH equ 0FB0h");
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3531: __asm("T3CON equ 0FB1h");
[; <" T3CON equ 0FB1h ;# ">
"3643
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3643: __asm("TMR3 equ 0FB2h");
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3650: __asm("TMR3L equ 0FB2h");
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3657: __asm("TMR3H equ 0FB3h");
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3664: __asm("CMCON equ 0FB4h");
[; <" CMCON equ 0FB4h ;# ">
"3754
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3754: __asm("CVRCON equ 0FB5h");
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3833: __asm("ECCP1AS equ 0FB6h");
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3915: __asm("PWM1CON equ 0FB7h");
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3985: __asm("BAUDCON equ 0FB8h");
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 3990: __asm("BAUDCTL equ 0FB8h");
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4157: __asm("CCP2CON equ 0FBAh");
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4236: __asm("CCPR2 equ 0FBBh");
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4243: __asm("CCPR2L equ 0FBBh");
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4250: __asm("CCPR2H equ 0FBCh");
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4257: __asm("CCP1CON equ 0FBDh");
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4354: __asm("CCPR1 equ 0FBEh");
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4361: __asm("CCPR1L equ 0FBEh");
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4368: __asm("CCPR1H equ 0FBFh");
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4375: __asm("ADCON2 equ 0FC0h");
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4446: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4531: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4650: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"4657
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4657: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4664: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4671: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4733: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 4803: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5024: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5031: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5038: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"5109
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5109: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"5114
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5114: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5219: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5226: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"5329
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5329: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5336: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5343: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5350: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"5483
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5483: __asm("WDTCON equ 0FD1h");
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5511: __asm("HLVDCON equ 0FD2h");
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5516: __asm("LVDCON equ 0FD2h");
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5781: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5858: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"5935
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5935: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5942: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5949: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 5956: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"6027
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6027: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6034: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6041: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6048: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6055: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6062: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6069: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6076: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6083: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"6090
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6090: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6097: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6104: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6111: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6118: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6125: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6132: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6139: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6146: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"6158
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6158: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6165: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6172: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6179: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6186: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6193: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6200: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6207: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6214: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6306: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6376: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"6493
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6493: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"6500
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6500: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"6507
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6507: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"6514
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6514: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6523: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6530: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6537: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6544: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6553: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6560: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"6567
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6567: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"6574
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6574: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6581: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6588: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6694: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"6701
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6701: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"6708
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6708: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"6715
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h: 6715: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"15 SD_PIC.c
[; ;SD_PIC.c: 15: const unsigned char CMD0 = 0;
[v _CMD0 `Cuc ~T0 @X0 1 e ]
[i _CMD0
-> -> 0 `i `uc
]
"16
[; ;SD_PIC.c: 16: const unsigned char CMD0CRC = 0x95;
[v _CMD0CRC `Cuc ~T0 @X0 1 e ]
[i _CMD0CRC
-> -> 149 `i `uc
]
"17
[; ;SD_PIC.c: 17: const unsigned char CMD1 = 1;
[v _CMD1 `Cuc ~T0 @X0 1 e ]
[i _CMD1
-> -> 1 `i `uc
]
"18
[; ;SD_PIC.c: 18: const unsigned char CMD8 = 8;
[v _CMD8 `Cuc ~T0 @X0 1 e ]
[i _CMD8
-> -> 8 `i `uc
]
"19
[; ;SD_PIC.c: 19: const unsigned char CMD8CRC = 0x87;
[v _CMD8CRC `Cuc ~T0 @X0 1 e ]
[i _CMD8CRC
-> -> 135 `i `uc
]
"20
[; ;SD_PIC.c: 20: const unsigned char CMD9 = 9;
[v _CMD9 `Cuc ~T0 @X0 1 e ]
[i _CMD9
-> -> 9 `i `uc
]
"21
[; ;SD_PIC.c: 21: const unsigned char CMD10 = 10;
[v _CMD10 `Cuc ~T0 @X0 1 e ]
[i _CMD10
-> -> 10 `i `uc
]
"22
[; ;SD_PIC.c: 22: const unsigned char CMD12 = 12;
[v _CMD12 `Cuc ~T0 @X0 1 e ]
[i _CMD12
-> -> 12 `i `uc
]
"23
[; ;SD_PIC.c: 23: const unsigned char CMD13 = 13;
[v _CMD13 `Cuc ~T0 @X0 1 e ]
[i _CMD13
-> -> 13 `i `uc
]
"24
[; ;SD_PIC.c: 24: const unsigned char CMD16 = 16;
[v _CMD16 `Cuc ~T0 @X0 1 e ]
[i _CMD16
-> -> 16 `i `uc
]
"25
[; ;SD_PIC.c: 25: const unsigned char CMD17 = 17;
[v _CMD17 `Cuc ~T0 @X0 1 e ]
[i _CMD17
-> -> 17 `i `uc
]
"26
[; ;SD_PIC.c: 26: const unsigned char CMD18 = 18;
[v _CMD18 `Cuc ~T0 @X0 1 e ]
[i _CMD18
-> -> 18 `i `uc
]
"27
[; ;SD_PIC.c: 27: const unsigned char CMD24 = 24;
[v _CMD24 `Cuc ~T0 @X0 1 e ]
[i _CMD24
-> -> 24 `i `uc
]
"28
[; ;SD_PIC.c: 28: const unsigned char CMD25 = 25;
[v _CMD25 `Cuc ~T0 @X0 1 e ]
[i _CMD25
-> -> 25 `i `uc
]
"29
[; ;SD_PIC.c: 29: const unsigned char CMD32 = 32;
[v _CMD32 `Cuc ~T0 @X0 1 e ]
[i _CMD32
-> -> 32 `i `uc
]
"30
[; ;SD_PIC.c: 30: const unsigned char CMD33 = 33;
[v _CMD33 `Cuc ~T0 @X0 1 e ]
[i _CMD33
-> -> 33 `i `uc
]
"31
[; ;SD_PIC.c: 31: const unsigned char CMD38 = 38;
[v _CMD38 `Cuc ~T0 @X0 1 e ]
[i _CMD38
-> -> 38 `i `uc
]
"32
[; ;SD_PIC.c: 32: const unsigned char CMD55 = 55;
[v _CMD55 `Cuc ~T0 @X0 1 e ]
[i _CMD55
-> -> 55 `i `uc
]
"33
[; ;SD_PIC.c: 33: const unsigned char CMD58 = 58;
[v _CMD58 `Cuc ~T0 @X0 1 e ]
[i _CMD58
-> -> 58 `i `uc
]
"34
[; ;SD_PIC.c: 34: const unsigned char ACMD22 = 22;
[v _ACMD22 `Cuc ~T0 @X0 1 e ]
[i _ACMD22
-> -> 22 `i `uc
]
"35
[; ;SD_PIC.c: 35: const unsigned char ACMD23 = 23;
[v _ACMD23 `Cuc ~T0 @X0 1 e ]
[i _ACMD23
-> -> 23 `i `uc
]
"36
[; ;SD_PIC.c: 36: const unsigned char ACMD41 = 41;
[v _ACMD41 `Cuc ~T0 @X0 1 e ]
[i _ACMD41
-> -> 41 `i `uc
]
"37
[; ;SD_PIC.c: 37: const unsigned char R1_READY_STATE = 0;
[v _R1_READY_STATE `Cuc ~T0 @X0 1 e ]
[i _R1_READY_STATE
-> -> 0 `i `uc
]
"38
[; ;SD_PIC.c: 38: const unsigned char R1_IDLE_STATE = 1;
[v _R1_IDLE_STATE `Cuc ~T0 @X0 1 e ]
[i _R1_IDLE_STATE
-> -> 1 `i `uc
]
"39
[; ;SD_PIC.c: 39: const unsigned char R1_ILLEGAL_COMMAND = 4;
[v _R1_ILLEGAL_COMMAND `Cuc ~T0 @X0 1 e ]
[i _R1_ILLEGAL_COMMAND
-> -> 4 `i `uc
]
"40
[; ;SD_PIC.c: 40: const unsigned char START_BLOCK = 0xFE;
[v _START_BLOCK `Cuc ~T0 @X0 1 e ]
[i _START_BLOCK
-> -> 254 `i `uc
]
"41
[; ;SD_PIC.c: 41: const unsigned char START_BLOCK_TOKEN = 0xFC;
[v _START_BLOCK_TOKEN `Cuc ~T0 @X0 1 e ]
[i _START_BLOCK_TOKEN
-> -> 252 `i `uc
]
"42
[; ;SD_PIC.c: 42: const unsigned char STOP_TRAN = 0xFD;
[v _STOP_TRAN `Cuc ~T0 @X0 1 e ]
[i _STOP_TRAN
-> -> 253 `i `uc
]
"45
[; ;SD_PIC.c: 45: SDCard_t SDCard = {0};
[v _SDCard `S271 ~T0 @X0 1 e ]
[i _SDCard
:U ..
:U ..
-> -> 0 `i `uc
..
..
]
"52
[; ;SD_PIC.c: 52: unsigned char SDwriteBuffer[512];
[v _SDwriteBuffer `uc ~T0 @X0 -> 512 `i e ]
"53
[; ;SD_PIC.c: 53: unsigned char SDreadBuffer[512];
[v _SDreadBuffer `uc ~T0 @X0 -> 512 `i e ]
"56
[; ;SD_PIC.c: 56: void SD_SendDummyBytes(unsigned char numBytes){
[v _SD_SendDummyBytes `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _SD_SendDummyBytes ]
[v _numBytes `uc ~T0 @X0 1 r1 ]
[f ]
"57
[; ;SD_PIC.c: 57:     unsigned char n = numBytes;
[v _n `uc ~T0 @X0 1 a ]
[e = _n _numBytes ]
"58
[; ;SD_PIC.c: 58:     while(n > 0){
[e $U 275  ]
[e :U 276 ]
{
"59
[; ;SD_PIC.c: 59:         spiSend(0xFF);
[e ( _spiSend (1 -> -> 255 `i `uc ]
"60
[; ;SD_PIC.c: 60:         n--;
[e -- _n -> -> 1 `i `uc ]
"61
[; ;SD_PIC.c: 61:     }
}
[e :U 275 ]
"58
[; ;SD_PIC.c: 58:     while(n > 0){
[e $ > -> _n `i -> 0 `i 276  ]
[e :U 277 ]
"62
[; ;SD_PIC.c: 62: }
[e :UE 274 ]
}
"64
[; ;SD_PIC.c: 64: unsigned char SD_Command(unsigned char cmd, unsigned long arg){
[v _SD_Command `(uc ~T0 @X0 1 ef2`uc`ul ]
{
[e :U _SD_Command ]
[v _cmd `uc ~T0 @X0 1 r1 ]
[v _arg `ul ~T0 @X0 1 r2 ]
[f ]
"65
[; ;SD_PIC.c: 65:     LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"70
[; ;SD_PIC.c: 70:     while(spiReceive() != 0xFF){
[e $U 279  ]
[e :U 280 ]
{
"71
[; ;SD_PIC.c: 71:         continue;
[e $U 279  ]
"72
[; ;SD_PIC.c: 72:     }
}
[e :U 279 ]
"70
[; ;SD_PIC.c: 70:     while(spiReceive() != 0xFF){
[e $ != -> ( _spiReceive ..  `i -> 255 `i 280  ]
[e :U 281 ]
"75
[; ;SD_PIC.c: 75:     spiSend(cmd | 0x40U);
[e ( _spiSend (1 -> | -> _cmd `ui -> 64 `ui `uc ]
"78
[; ;SD_PIC.c: 78:     spiSend(arg >> 24);
[e ( _spiSend (1 -> >> _arg -> 24 `i `uc ]
"79
[; ;SD_PIC.c: 79:     spiSend((arg >> 16) & 0xFF);
[e ( _spiSend (1 -> & >> _arg -> 16 `i -> -> -> 255 `i `l `ul `uc ]
"80
[; ;SD_PIC.c: 80:     spiSend((arg >> 8) & 0xFF);
[e ( _spiSend (1 -> & >> _arg -> 8 `i -> -> -> 255 `i `l `ul `uc ]
"81
[; ;SD_PIC.c: 81:     spiSend(arg & 0xFF);
[e ( _spiSend (1 -> & _arg -> -> -> 255 `i `l `ul `uc ]
"86
[; ;SD_PIC.c: 86:     if(cmd == CMD8){
[e $ ! == -> _cmd `i -> _CMD8 `i 282  ]
{
"87
[; ;SD_PIC.c: 87:         spiSend(CMD8CRC);
[e ( _spiSend (1 _CMD8CRC ]
"88
[; ;SD_PIC.c: 88:     }
}
[e $U 283  ]
"89
[; ;SD_PIC.c: 89:     else{
[e :U 282 ]
{
"90
[; ;SD_PIC.c: 90:         spiSend(CMD0CRC);
[e ( _spiSend (1 _CMD0CRC ]
"91
[; ;SD_PIC.c: 91:     }
}
[e :U 283 ]
"94
[; ;SD_PIC.c: 94:     unsigned char n = 0;
[v _n `uc ~T0 @X0 1 a ]
[e = _n -> -> 0 `i `uc ]
"95
[; ;SD_PIC.c: 95:     unsigned char response;
[v _response `uc ~T0 @X0 1 a ]
"96
[; ;SD_PIC.c: 96:     do{
[e :U 286 ]
{
"97
[; ;SD_PIC.c: 97:         response = spiReceive();
[e = _response ( _spiReceive ..  ]
"98
[; ;SD_PIC.c: 98:         n++;
[e ++ _n -> -> 1 `i `uc ]
"99
[; ;SD_PIC.c: 99:     }while((n < 8) && (response == 0xFF));
}
[e $ && < -> _n `i -> 8 `i == -> _response `i -> 255 `i 286  ]
[e :U 285 ]
"101
[; ;SD_PIC.c: 101:     LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"103
[; ;SD_PIC.c: 103:     return response;
[e ) _response ]
[e $UE 278  ]
"104
[; ;SD_PIC.c: 104: }
[e :UE 278 ]
}
"106
[; ;SD_PIC.c: 106: unsigned char SD_ACMD(unsigned char cmd, unsigned long arg){
[v _SD_ACMD `(uc ~T0 @X0 1 ef2`uc`ul ]
{
[e :U _SD_ACMD ]
[v _cmd `uc ~T0 @X0 1 r1 ]
[v _arg `ul ~T0 @X0 1 r2 ]
[f ]
"109
[; ;SD_PIC.c: 109:     SD_Command(CMD55, 0);
[e ( _SD_Command (2 , _CMD55 -> -> -> 0 `i `l `ul ]
"110
[; ;SD_PIC.c: 110:     return SD_Command(cmd, arg);
[e ) ( _SD_Command (2 , _cmd _arg ]
[e $UE 287  ]
"111
[; ;SD_PIC.c: 111: }
[e :UE 287 ]
}
"113
[; ;SD_PIC.c: 113: unsigned char SD_SingleBlockWrite(unsigned long block, unsigned char* arr){
[v _SD_SingleBlockWrite `(uc ~T0 @X0 1 ef2`ul`*uc ]
{
[e :U _SD_SingleBlockWrite ]
[v _block `ul ~T0 @X0 1 r1 ]
[v _arr `*uc ~T0 @X0 1 r2 ]
[f ]
"118
[; ;SD_PIC.c: 118:     if(SDCard.Type == TYPE_SDSC){
[e $ ! == -> . _SDCard 1 `ui -> . `E2692 0 `ui 289  ]
{
"120
[; ;SD_PIC.c: 120:         block <<= 9;
[e =<< _block -> -> 9 `i `ul ]
"121
[; ;SD_PIC.c: 121:     }
}
[e :U 289 ]
"124
[; ;SD_PIC.c: 124:     while(SD_Command(CMD24, block) != R1_READY_STATE);
[e $U 290  ]
[e :U 291 ]
[e :U 290 ]
[e $ != -> ( _SD_Command (2 , _CMD24 _block `i -> _R1_READY_STATE `i 291  ]
[e :U 292 ]
"127
[; ;SD_PIC.c: 127:     LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"128
[; ;SD_PIC.c: 128:     spiSend(START_BLOCK);
[e ( _spiSend (1 _START_BLOCK ]
"131
[; ;SD_PIC.c: 131:     for(unsigned short i = 0; i < 512; i++){
{
[v _i `us ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `us ]
[e $ < -> _i `ui -> -> 512 `i `ui 293  ]
[e $U 294  ]
[e :U 293 ]
{
"132
[; ;SD_PIC.c: 132:         spiTransfer(arr[i]);
[e ( _spiTransfer (1 *U + _arr * -> _i `ux -> -> # *U _arr `ui `ux ]
"133
[; ;SD_PIC.c: 133:     }
}
[e ++ _i -> -> 1 `i `us ]
[e $ < -> _i `ui -> -> 512 `i `ui 293  ]
[e :U 294 ]
}
"136
[; ;SD_PIC.c: 136:     SD_SendDummyBytes(2);
[e ( _SD_SendDummyBytes (1 -> -> 2 `i `uc ]
"139
[; ;SD_PIC.c: 139:     unsigned char response = (spiReceive() >> 1) & 0x0F;
[v _response `uc ~T0 @X0 1 a ]
[e = _response -> & >> -> ( _spiReceive ..  `i -> 1 `i -> 15 `i `uc ]
"140
[; ;SD_PIC.c: 140:     LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"141
[; ;SD_PIC.c: 141:     switch(response){
[e $U 297  ]
{
"142
[; ;SD_PIC.c: 142:         case 0b10:
[e :U 298 ]
"146
[; ;SD_PIC.c: 146:             SDCard.write.lastBlockWritten = block;
[e = . . _SDCard 14 0 _block ]
"149
[; ;SD_PIC.c: 149:             while(spiReceive() == 0){ continue; }
[e $U 299  ]
[e :U 300 ]
{
[e $U 299  ]
}
[e :U 299 ]
[e $ == -> ( _spiReceive ..  `i -> 0 `i 300  ]
[e :U 301 ]
"150
[; ;SD_PIC.c: 150:             return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 288  ]
"151
[; ;SD_PIC.c: 151:         case 0b101:
[e :U 302 ]
"153
[; ;SD_PIC.c: 153:             return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 288  ]
"154
[; ;SD_PIC.c: 154:         case 0b110:
[e :U 303 ]
"156
[; ;SD_PIC.c: 156:             return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 288  ]
"157
[; ;SD_PIC.c: 157:         default:
[e :U 304 ]
"158
[; ;SD_PIC.c: 158:             return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 288  ]
"159
[; ;SD_PIC.c: 159:     }
}
[e $U 296  ]
[e :U 297 ]
[e [\ -> _response `i , $ -> 2 `i 298
 , $ -> 5 `i 302
 , $ -> 6 `i 303
 304 ]
[e :U 296 ]
"160
[; ;SD_PIC.c: 160: }
[e :UE 288 ]
}
"162
[; ;SD_PIC.c: 162: void SD_MBW_Start(unsigned long startBlock, unsigned long numBlocks){
[v _SD_MBW_Start `(v ~T0 @X0 1 ef2`ul`ul ]
{
[e :U _SD_MBW_Start ]
[v _startBlock `ul ~T0 @X0 1 r1 ]
[v _numBlocks `ul ~T0 @X0 1 r2 ]
[f ]
"167
[; ;SD_PIC.c: 167:     if(SDCard.Type == TYPE_SDSC){
[e $ ! == -> . _SDCard 1 `ui -> . `E2692 0 `ui 306  ]
{
"169
[; ;SD_PIC.c: 169:         startBlock <<= 9;
[e =<< _startBlock -> -> 9 `i `ul ]
"170
[; ;SD_PIC.c: 170:     }
}
[e :U 306 ]
"173
[; ;SD_PIC.c: 173:     SD_ACMD(ACMD23, numBlocks);
[e ( _SD_ACMD (2 , _ACMD23 _numBlocks ]
"176
[; ;SD_PIC.c: 176:     while(SD_Command(CMD25, startBlock) != R1_READY_STATE);
[e $U 307  ]
[e :U 308 ]
[e :U 307 ]
[e $ != -> ( _SD_Command (2 , _CMD25 _startBlock `i -> _R1_READY_STATE `i 308  ]
[e :U 309 ]
"178
[; ;SD_PIC.c: 178:     SDCard.write.MBW_startBlock = startBlock;
[e = . . _SDCard 14 1 _startBlock ]
"179
[; ;SD_PIC.c: 179: }
[e :UE 305 ]
}
"181
[; ;SD_PIC.c: 181: unsigned char SD_MBW_Send(unsigned char* arrWrite){
[v _SD_MBW_Send `(uc ~T0 @X0 1 ef1`*uc ]
{
[e :U _SD_MBW_Send ]
[v _arrWrite `*uc ~T0 @X0 1 r1 ]
[f ]
"182
[; ;SD_PIC.c: 182:     LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"183
[; ;SD_PIC.c: 183:     while(spiReceive() != 0xFF);
[e $U 311  ]
[e :U 312 ]
[e :U 311 ]
[e $ != -> ( _spiReceive ..  `i -> 255 `i 312  ]
[e :U 313 ]
"186
[; ;SD_PIC.c: 186:     spiSend(START_BLOCK_TOKEN);
[e ( _spiSend (1 _START_BLOCK_TOKEN ]
"189
[; ;SD_PIC.c: 189:     unsigned char response = 0;
[v _response `uc ~T0 @X0 1 a ]
[e = _response -> -> 0 `i `uc ]
"190
[; ;SD_PIC.c: 190:     for(unsigned short i = 0; i < 512; i++){
{
[v _i `us ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `us ]
[e $ < -> _i `ui -> -> 512 `i `ui 314  ]
[e $U 315  ]
[e :U 314 ]
{
"191
[; ;SD_PIC.c: 191:         response = spiTransfer(arrWrite[i]);
[e = _response ( _spiTransfer (1 *U + _arrWrite * -> _i `ux -> -> # *U _arrWrite `ui `ux ]
"192
[; ;SD_PIC.c: 192:     }
}
[e ++ _i -> -> 1 `i `us ]
[e $ < -> _i `ui -> -> 512 `i `ui 314  ]
[e :U 315 ]
}
"195
[; ;SD_PIC.c: 195:     SD_SendDummyBytes(2);
[e ( _SD_SendDummyBytes (1 -> -> 2 `i `uc ]
"198
[; ;SD_PIC.c: 198:     do{
[e :U 319 ]
{
"199
[; ;SD_PIC.c: 199:         response = spiReceive() & 0x1F;
[e = _response -> & -> ( _spiReceive ..  `i -> 31 `i `uc ]
"200
[; ;SD_PIC.c: 200:     }while(response == 0x1F);
}
[e $ == -> _response `i -> 31 `i 319  ]
[e :U 318 ]
"201
[; ;SD_PIC.c: 201:     LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"203
[; ;SD_PIC.c: 203:     switch(response){
[e $U 321  ]
{
"204
[; ;SD_PIC.c: 204:         case 0b00101:
[e :U 322 ]
"208
[; ;SD_PIC.c: 208:             if(SDCard.write.MBW_flag_first){
[e $ ! != -> . . _SDCard 14 2 `i -> 0 `i 323  ]
{
"210
[; ;SD_PIC.c: 210:                 SDCard.write.lastBlockWritten = SDCard.write.MBW_startBlock;
[e = . . _SDCard 14 0 . . _SDCard 14 1 ]
"211
[; ;SD_PIC.c: 211:                 SDCard.write.MBW_flag_first = 0;
[e = . . _SDCard 14 2 -> -> 0 `i `uc ]
"212
[; ;SD_PIC.c: 212:             }
}
[e $U 324  ]
"213
[; ;SD_PIC.c: 213:             else{
[e :U 323 ]
{
"214
[; ;SD_PIC.c: 214:                 SDCard.write.lastBlockWritten++;
[e ++ . . _SDCard 14 0 -> -> -> 1 `i `l `ul ]
"215
[; ;SD_PIC.c: 215:             }
}
[e :U 324 ]
"217
[; ;SD_PIC.c: 217:             return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 310  ]
"218
[; ;SD_PIC.c: 218:         case 0b01011:
[e :U 325 ]
"220
[; ;SD_PIC.c: 220:             SD_Command(CMD12, 0);
[e ( _SD_Command (2 , _CMD12 -> -> -> 0 `i `l `ul ]
"221
[; ;SD_PIC.c: 221:             return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 310  ]
"222
[; ;SD_PIC.c: 222:         case 0b01101:
[e :U 326 ]
"224
[; ;SD_PIC.c: 224:             SD_Command(CMD12, 0);
[e ( _SD_Command (2 , _CMD12 -> -> -> 0 `i `l `ul ]
"225
[; ;SD_PIC.c: 225:             return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 310  ]
"226
[; ;SD_PIC.c: 226:         default:
[e :U 327 ]
"227
[; ;SD_PIC.c: 227:             return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 310  ]
"228
[; ;SD_PIC.c: 228:     }
}
[e $U 320  ]
[e :U 321 ]
[e [\ -> _response `i , $ -> 5 `i 322
 , $ -> 11 `i 325
 , $ -> 13 `i 326
 327 ]
[e :U 320 ]
"229
[; ;SD_PIC.c: 229: }
[e :UE 310 ]
}
"231
[; ;SD_PIC.c: 231: void SD_MBW_Stop(void){
[v _SD_MBW_Stop `(v ~T0 @X0 1 ef ]
{
[e :U _SD_MBW_Stop ]
[f ]
"232
[; ;SD_PIC.c: 232:     LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"233
[; ;SD_PIC.c: 233:     while(spiReceive() != 0xFF);
[e $U 329  ]
[e :U 330 ]
[e :U 329 ]
[e $ != -> ( _spiReceive ..  `i -> 255 `i 330  ]
[e :U 331 ]
"236
[; ;SD_PIC.c: 236:     spiSend(STOP_TRAN);
[e ( _spiSend (1 _STOP_TRAN ]
"239
[; ;SD_PIC.c: 239:     while(spiReceive() == 0){
[e $U 332  ]
[e :U 333 ]
{
"240
[; ;SD_PIC.c: 240:         continue;
[e $U 332  ]
"241
[; ;SD_PIC.c: 241:     }
}
[e :U 332 ]
"239
[; ;SD_PIC.c: 239:     while(spiReceive() == 0){
[e $ == -> ( _spiReceive ..  `i -> 0 `i 333  ]
[e :U 334 ]
"243
[; ;SD_PIC.c: 243:     LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"245
[; ;SD_PIC.c: 245:     SDCard.write.MBW_flag_first = 1;
[e = . . _SDCard 14 2 -> -> 1 `i `uc ]
"246
[; ;SD_PIC.c: 246: }
[e :UE 328 ]
}
"248
[; ;SD_PIC.c: 248: unsigned char SD_SingleBlockRead(unsigned long block, unsigned char* buf){
[v _SD_SingleBlockRead `(uc ~T0 @X0 1 ef2`ul`*uc ]
{
[e :U _SD_SingleBlockRead ]
[v _block `ul ~T0 @X0 1 r1 ]
[v _buf `*uc ~T0 @X0 1 r2 ]
[f ]
"253
[; ;SD_PIC.c: 253:     if(SDCard.Type == TYPE_SDSC){
[e $ ! == -> . _SDCard 1 `ui -> . `E2692 0 `ui 336  ]
{
"255
[; ;SD_PIC.c: 255:         block <<= 9;
[e =<< _block -> -> 9 `i `ul ]
"256
[; ;SD_PIC.c: 256:     }
}
[e :U 336 ]
"260
[; ;SD_PIC.c: 260:     unsigned char response;
[v _response `uc ~T0 @X0 1 a ]
"261
[; ;SD_PIC.c: 261:     do{
[e :U 339 ]
{
"262
[; ;SD_PIC.c: 262:         response = SD_Command(CMD17, block);
[e = _response ( _SD_Command (2 , _CMD17 _block ]
"263
[; ;SD_PIC.c: 263:         if((response & 0x0F) != 0){
[e $ ! != & -> _response `i -> 15 `i -> 0 `i 340  ]
{
"268
[; ;SD_PIC.c: 268:             return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 335  ]
"269
[; ;SD_PIC.c: 269:         }
}
[e :U 340 ]
"270
[; ;SD_PIC.c: 270:     }while(response != R1_READY_STATE);
}
[e $ != -> _response `i -> _R1_READY_STATE `i 339  ]
[e :U 338 ]
"273
[; ;SD_PIC.c: 273:     LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"274
[; ;SD_PIC.c: 274:     do{
[e :U 343 ]
{
"275
[; ;SD_PIC.c: 275:         response = spiReceive();
[e = _response ( _spiReceive ..  ]
"276
[; ;SD_PIC.c: 276:     }while(response != START_BLOCK);
}
[e $ != -> _response `i -> _START_BLOCK `i 343  ]
[e :U 342 ]
"278
[; ;SD_PIC.c: 278:     for(unsigned short i = 0; i < 512; i++){
{
[v _i `us ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `us ]
[e $ < -> _i `ui -> -> 512 `i `ui 344  ]
[e $U 345  ]
[e :U 344 ]
{
"279
[; ;SD_PIC.c: 279:         buf[i] = spiReceive();
[e = *U + _buf * -> _i `ux -> -> # *U _buf `ui `ux ( _spiReceive ..  ]
"280
[; ;SD_PIC.c: 280:     }
}
[e ++ _i -> -> 1 `i `us ]
[e $ < -> _i `ui -> -> 512 `i `ui 344  ]
[e :U 345 ]
}
"283
[; ;SD_PIC.c: 283:     spiSend(0xFF);
[e ( _spiSend (1 -> -> 255 `i `uc ]
"284
[; ;SD_PIC.c: 284:     spiSend(0xFF);
[e ( _spiSend (1 -> -> 255 `i `uc ]
"286
[; ;SD_PIC.c: 286:     LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"288
[; ;SD_PIC.c: 288:     SDCard.read.lastBlockRead = block;
[e = . . _SDCard 15 0 _block ]
"290
[; ;SD_PIC.c: 290:     return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 335  ]
"291
[; ;SD_PIC.c: 291: }
[e :UE 335 ]
}
"293
[; ;SD_PIC.c: 293: unsigned char SD_MBR_Start(unsigned long startBlock){
[v _SD_MBR_Start `(uc ~T0 @X0 1 ef1`ul ]
{
[e :U _SD_MBR_Start ]
[v _startBlock `ul ~T0 @X0 1 r1 ]
[f ]
"298
[; ;SD_PIC.c: 298:     if(SDCard.Type == TYPE_SDSC){
[e $ ! == -> . _SDCard 1 `ui -> . `E2692 0 `ui 348  ]
{
"300
[; ;SD_PIC.c: 300:         startBlock <<= 9;
[e =<< _startBlock -> -> 9 `i `ul ]
"301
[; ;SD_PIC.c: 301:     }
}
[e :U 348 ]
"305
[; ;SD_PIC.c: 305:     unsigned char response = 0;
[v _response `uc ~T0 @X0 1 a ]
[e = _response -> -> 0 `i `uc ]
"306
[; ;SD_PIC.c: 306:     do{
[e :U 351 ]
{
"307
[; ;SD_PIC.c: 307:         response = SD_Command(CMD18, startBlock);
[e = _response ( _SD_Command (2 , _CMD18 _startBlock ]
"308
[; ;SD_PIC.c: 308:         if(response & 0x0F){
[e $ ! != & -> _response `i -> 15 `i -> 0 `i 352  ]
{
"313
[; ;SD_PIC.c: 313:             return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 347  ]
"314
[; ;SD_PIC.c: 314:         }
}
[e :U 352 ]
"315
[; ;SD_PIC.c: 315:     }while(response != R1_READY_STATE);
}
[e $ != -> _response `i -> _R1_READY_STATE `i 351  ]
[e :U 350 ]
"317
[; ;SD_PIC.c: 317:     SDCard.read.MBR_startBlock = startBlock;
[e = . . _SDCard 15 1 _startBlock ]
"319
[; ;SD_PIC.c: 319:     return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 347  ]
"320
[; ;SD_PIC.c: 320: }
[e :UE 347 ]
}
"322
[; ;SD_PIC.c: 322: void SD_MBR_Receive(unsigned char* bufReceive){
[v _SD_MBR_Receive `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _SD_MBR_Receive ]
[v _bufReceive `*uc ~T0 @X0 1 r1 ]
[f ]
"325
[; ;SD_PIC.c: 325:     while(spiReceive() == 0x00){
[e $U 354  ]
[e :U 355 ]
{
"326
[; ;SD_PIC.c: 326:         continue;
[e $U 354  ]
"327
[; ;SD_PIC.c: 327:     }
}
[e :U 354 ]
"325
[; ;SD_PIC.c: 325:     while(spiReceive() == 0x00){
[e $ == -> ( _spiReceive ..  `i -> 0 `i 355  ]
[e :U 356 ]
"329
[; ;SD_PIC.c: 329:     LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"332
[; ;SD_PIC.c: 332:     while(spiReceive() != 0xFF){
[e $U 357  ]
[e :U 358 ]
{
"333
[; ;SD_PIC.c: 333:         continue;
[e $U 357  ]
"334
[; ;SD_PIC.c: 334:     }
}
[e :U 357 ]
"332
[; ;SD_PIC.c: 332:     while(spiReceive() != 0xFF){
[e $ != -> ( _spiReceive ..  `i -> 255 `i 358  ]
[e :U 359 ]
"336
[; ;SD_PIC.c: 336:     while(spiReceive() != START_BLOCK){
[e $U 360  ]
[e :U 361 ]
{
"337
[; ;SD_PIC.c: 337:         continue;
[e $U 360  ]
"338
[; ;SD_PIC.c: 338:     }
}
[e :U 360 ]
"336
[; ;SD_PIC.c: 336:     while(spiReceive() != START_BLOCK){
[e $ != -> ( _spiReceive ..  `i -> _START_BLOCK `i 361  ]
[e :U 362 ]
"340
[; ;SD_PIC.c: 340:     for(unsigned short i = 0; i < 512; i++){
{
[v _i `us ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `us ]
[e $ < -> _i `ui -> -> 512 `i `ui 363  ]
[e $U 364  ]
[e :U 363 ]
{
"341
[; ;SD_PIC.c: 341:         bufReceive[i] = spiReceive();
[e = *U + _bufReceive * -> _i `ux -> -> # *U _bufReceive `ui `ux ( _spiReceive ..  ]
"342
[; ;SD_PIC.c: 342:     }
}
[e ++ _i -> -> 1 `i `us ]
[e $ < -> _i `ui -> -> 512 `i `ui 363  ]
[e :U 364 ]
}
"345
[; ;SD_PIC.c: 345:     spiSend(0xFF);
[e ( _spiSend (1 -> -> 255 `i `uc ]
"346
[; ;SD_PIC.c: 346:     spiSend(0xFF);
[e ( _spiSend (1 -> -> 255 `i `uc ]
"348
[; ;SD_PIC.c: 348:     LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"350
[; ;SD_PIC.c: 350:     if(SDCard.read.MBR_flag_first){
[e $ ! != -> . . _SDCard 15 2 `i -> 0 `i 366  ]
{
"351
[; ;SD_PIC.c: 351:         SDCard.read.lastBlockRead = SDCard.read.MBR_startBlock;
[e = . . _SDCard 15 0 . . _SDCard 15 1 ]
"352
[; ;SD_PIC.c: 352:         SDCard.read.MBR_flag_first = 0;
[e = . . _SDCard 15 2 -> -> 0 `i `uc ]
"353
[; ;SD_PIC.c: 353:     }
}
[e $U 367  ]
"354
[; ;SD_PIC.c: 354:     else{
[e :U 366 ]
{
"355
[; ;SD_PIC.c: 355:         SDCard.read.lastBlockRead++;
[e ++ . . _SDCard 15 0 -> -> -> 1 `i `l `ul ]
"356
[; ;SD_PIC.c: 356:     }
}
[e :U 367 ]
"357
[; ;SD_PIC.c: 357: }
[e :UE 353 ]
}
"359
[; ;SD_PIC.c: 359: void SD_MBR_Stop(void){
[v _SD_MBR_Stop `(v ~T0 @X0 1 ef ]
{
[e :U _SD_MBR_Stop ]
[f ]
"361
[; ;SD_PIC.c: 361:     SD_Command(CMD12, 0);
[e ( _SD_Command (2 , _CMD12 -> -> -> 0 `i `l `ul ]
"362
[; ;SD_PIC.c: 362:     SDCard.read.MBR_flag_first = 1;
[e = . . _SDCard 15 2 -> -> 1 `i `uc ]
"363
[; ;SD_PIC.c: 363: }
[e :UE 368 ]
}
"365
[; ;SD_PIC.c: 365: void SD_EraseBlocks(unsigned long firstBlock, unsigned long lastBlock){
[v _SD_EraseBlocks `(v ~T0 @X0 1 ef2`ul`ul ]
{
[e :U _SD_EraseBlocks ]
[v _firstBlock `ul ~T0 @X0 1 r1 ]
[v _lastBlock `ul ~T0 @X0 1 r2 ]
[f ]
"370
[; ;SD_PIC.c: 370:     if(SDCard.Type == TYPE_SDSC){
[e $ ! == -> . _SDCard 1 `ui -> . `E2692 0 `ui 370  ]
{
"372
[; ;SD_PIC.c: 372:         firstBlock <<= 9;
[e =<< _firstBlock -> -> 9 `i `ul ]
"373
[; ;SD_PIC.c: 373:         lastBlock <<= 9;
[e =<< _lastBlock -> -> 9 `i `ul ]
"374
[; ;SD_PIC.c: 374:     }
}
[e :U 370 ]
"377
[; ;SD_PIC.c: 377:     SD_Command(CMD32, firstBlock);
[e ( _SD_Command (2 , _CMD32 _firstBlock ]
"380
[; ;SD_PIC.c: 380:     SD_Command(CMD33, lastBlock);
[e ( _SD_Command (2 , _CMD33 _lastBlock ]
"383
[; ;SD_PIC.c: 383:     SD_Command(CMD38, 0);
[e ( _SD_Command (2 , _CMD38 -> -> -> 0 `i `l `ul ]
"384
[; ;SD_PIC.c: 384: }
[e :UE 369 ]
}
"386
[; ;SD_PIC.c: 386: void initSD(void){
[v _initSD `(v ~T0 @X0 1 ef ]
{
[e :U _initSD ]
[f ]
"387
[; ;SD_PIC.c: 387:     const unsigned char last_OSCCON = OSCCON;
[v _last_OSCCON `Cuc ~T0 @X0 1 a ]
[e = _last_OSCCON _OSCCON ]
"388
[; ;SD_PIC.c: 388:     const unsigned char last_OSCTUNE = OSCTUNE;
[v _last_OSCTUNE `Cuc ~T0 @X0 1 a ]
[e = _last_OSCTUNE _OSCTUNE ]
"389
[; ;SD_PIC.c: 389:     unsigned char response;
[v _response `uc ~T0 @X0 1 a ]
[v F2838 `uc ~T0 @X0 -> 16 `i s ]
[i F2838
:U ..
"390
[; ;SD_PIC.c: 390:     unsigned char arr_response[16] = {0};
-> -> 0 `i `uc
..
]
[v _arr_response `uc ~T0 @X0 -> 16 `i a ]
[e = _arr_response F2838 ]
"400
[; ;SD_PIC.c: 400:     while(!OSCCONbits.IOFS){
[e $U 372  ]
[e :U 373 ]
{
"401
[; ;SD_PIC.c: 401:         _delay((unsigned long)((20)*(32000000/4000000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 32000000 `l `d .4000000.0 `ul ]
"402
[; ;SD_PIC.c: 402:     }
}
[e :U 372 ]
"400
[; ;SD_PIC.c: 400:     while(!OSCCONbits.IOFS){
[e $ ! != -> . . _OSCCONbits 0 1 `i -> 0 `i 373  ]
[e :U 374 ]
"404
[; ;SD_PIC.c: 404:     spiInit(16);
[e ( _spiInit (1 -> -> 16 `i `uc ]
"408
[; ;SD_PIC.c: 408:     _delay((unsigned long)((20)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"411
[; ;SD_PIC.c: 411:     LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"412
[; ;SD_PIC.c: 412:     TRISEbits.TRISE2 = 0;
[e = . . _TRISEbits 0 2 -> -> 0 `i `uc ]
"415
[; ;SD_PIC.c: 415:     for(unsigned char i = 0; i < 10; i++){
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 375  ]
[e $U 376  ]
[e :U 375 ]
{
"416
[; ;SD_PIC.c: 416:         spiSend(0xFF);
[e ( _spiSend (1 -> -> 255 `i `uc ]
"417
[; ;SD_PIC.c: 417:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 375  ]
[e :U 376 ]
}
"419
[; ;SD_PIC.c: 419:     LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"424
[; ;SD_PIC.c: 424:     while(SD_Command(CMD0, 0) != R1_IDLE_STATE){
[e $U 378  ]
[e :U 379 ]
{
"425
[; ;SD_PIC.c: 425:         continue;
[e $U 378  ]
"426
[; ;SD_PIC.c: 426:     }
}
[e :U 378 ]
"424
[; ;SD_PIC.c: 424:     while(SD_Command(CMD0, 0) != R1_IDLE_STATE){
[e $ != -> ( _SD_Command (2 , _CMD0 -> -> -> 0 `i `l `ul `i -> _R1_IDLE_STATE `i 379  ]
[e :U 380 ]
"433
[; ;SD_PIC.c: 433:     while(1){
[e :U 382 ]
{
"434
[; ;SD_PIC.c: 434:         response = SD_Command(CMD8, 0x01AA);
[e = _response ( _SD_Command (2 , _CMD8 -> -> -> 426 `i `l `ul ]
"437
[; ;SD_PIC.c: 437:         LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"438
[; ;SD_PIC.c: 438:         for(unsigned char i = 0; i < 4; i++){
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 384  ]
[e $U 385  ]
[e :U 384 ]
{
"439
[; ;SD_PIC.c: 439:             arr_response[i] = spiReceive();
[e = *U + &U _arr_response * -> _i `ux -> -> # *U &U _arr_response `ui `ux ( _spiReceive ..  ]
"440
[; ;SD_PIC.c: 440:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 384  ]
[e :U 385 ]
}
"441
[; ;SD_PIC.c: 441:         LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"443
[; ;SD_PIC.c: 443:         if((response & R1_ILLEGAL_COMMAND) == R1_ILLEGAL_COMMAND){
[e $ ! == & -> _response `i -> _R1_ILLEGAL_COMMAND `i -> _R1_ILLEGAL_COMMAND `i 387  ]
{
"446
[; ;SD_PIC.c: 446:             SDCard.SDversion = 1;
[e = . _SDCard 0 -> -> 1 `i `uc ]
"449
[; ;SD_PIC.c: 449:             SD_Command(CMD58, 0);
[e ( _SD_Command (2 , _CMD58 -> -> -> 0 `i `l `ul ]
"450
[; ;SD_PIC.c: 450:             LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"451
[; ;SD_PIC.c: 451:             for(unsigned char i = 0; i < 4; i++){
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 388  ]
[e $U 389  ]
[e :U 388 ]
{
"452
[; ;SD_PIC.c: 452:                 arr_response[i] = spiReceive();
[e = *U + &U _arr_response * -> _i `ux -> -> # *U &U _arr_response `ui `ux ( _spiReceive ..  ]
"453
[; ;SD_PIC.c: 453:             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 388  ]
[e :U 389 ]
}
"454
[; ;SD_PIC.c: 454:             LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"456
[; ;SD_PIC.c: 456:             if(arr_response[2] != 0x01){
[e $ ! != -> *U + &U _arr_response * -> -> -> 2 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 1 `i 391  ]
{
"458
[; ;SD_PIC.c: 458:                 return;
[e $UE 371  ]
"459
[; ;SD_PIC.c: 459:             }
}
[e :U 391 ]
"460
[; ;SD_PIC.c: 460:             break;
[e $U 383  ]
"461
[; ;SD_PIC.c: 461:         }
}
[e $U 392  ]
"462
[; ;SD_PIC.c: 462:         else if(response == R1_IDLE_STATE){
[e :U 387 ]
[e $ ! == -> _response `i -> _R1_IDLE_STATE `i 393  ]
{
"463
[; ;SD_PIC.c: 463:             if((arr_response[2] == 0x01) && (arr_response[3] == 0xAA)){
[e $ ! && == -> *U + &U _arr_response * -> -> -> 2 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 1 `i == -> *U + &U _arr_response * -> -> -> 3 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 170 `i 394  ]
{
"466
[; ;SD_PIC.c: 466:                SDCard.SDversion = 2;
[e = . _SDCard 0 -> -> 2 `i `uc ]
"467
[; ;SD_PIC.c: 467:                break;
[e $U 383  ]
"468
[; ;SD_PIC.c: 468:             }
}
[e $U 395  ]
"469
[; ;SD_PIC.c: 469:             else{
[e :U 394 ]
{
"471
[; ;SD_PIC.c: 471:                 return;
[e $UE 371  ]
"472
[; ;SD_PIC.c: 472:             }
}
[e :U 395 ]
"473
[; ;SD_PIC.c: 473:         }
}
[e :U 393 ]
[e :U 392 ]
"474
[; ;SD_PIC.c: 474:     }
}
[e :U 381 ]
[e $U 382  ]
[e :U 383 ]
"482
[; ;SD_PIC.c: 482:     unsigned long argument = (SDCard.SDversion == 1) ? 0 : 0x40000000;
[v _argument `ul ~T0 @X0 1 a ]
[e = _argument -> ? == -> . _SDCard 0 `i -> 1 `i : -> -> 0 `i `l -> 1073741824 `l `ul ]
"484
[; ;SD_PIC.c: 484:     do{
[e :U 398 ]
{
"485
[; ;SD_PIC.c: 485:         response = SD_ACMD(ACMD41, argument);
[e = _response ( _SD_ACMD (2 , _ACMD41 _argument ]
"486
[; ;SD_PIC.c: 486:     }while(
}
[e $ && != -> _response `i -> _R1_READY_STATE `i != & -> _response `i -> _R1_ILLEGAL_COMMAND `i -> _R1_ILLEGAL_COMMAND `i 398  ]
[e :U 397 ]
"493
[; ;SD_PIC.c: 493:     if((response & R1_ILLEGAL_COMMAND) == R1_ILLEGAL_COMMAND){
[e $ ! == & -> _response `i -> _R1_ILLEGAL_COMMAND `i -> _R1_ILLEGAL_COMMAND `i 399  ]
{
"494
[; ;SD_PIC.c: 494:         if(SDCard.SDversion == 1){
[e $ ! == -> . _SDCard 0 `i -> 1 `i 400  ]
{
"496
[; ;SD_PIC.c: 496:             SDCard.Type = TYPE_MMC;
[e = . _SDCard 1 . `E2692 2 ]
"497
[; ;SD_PIC.c: 497:             SD_Command(CMD1, 0);
[e ( _SD_Command (2 , _CMD1 -> -> -> 0 `i `l `ul ]
"498
[; ;SD_PIC.c: 498:         }
}
[e $U 401  ]
"499
[; ;SD_PIC.c: 499:         else{
[e :U 400 ]
{
"501
[; ;SD_PIC.c: 501:             SDCard.init = 0;
[e = . _SDCard 13 -> -> 0 `i `uc ]
"502
[; ;SD_PIC.c: 502:             return;
[e $UE 371  ]
"503
[; ;SD_PIC.c: 503:         }
}
[e :U 401 ]
"504
[; ;SD_PIC.c: 504:     }
}
[e :U 399 ]
"506
[; ;SD_PIC.c: 506:     if(SDCard.Type != TYPE_MMC){
[e $ ! != -> . _SDCard 1 `ui -> . `E2692 2 `ui 402  ]
{
"509
[; ;SD_PIC.c: 509:         SD_Command(CMD58, 0);
[e ( _SD_Command (2 , _CMD58 -> -> -> 0 `i `l `ul ]
"512
[; ;SD_PIC.c: 512:         LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"513
[; ;SD_PIC.c: 513:         if((spiReceive() & 0xC0) == 0xC0){
[e $ ! == & -> ( _spiReceive ..  `i -> 192 `i -> 192 `i 403  ]
{
"514
[; ;SD_PIC.c: 514:             SDCard.Type = TYPE_SDHC_SDXC;
[e = . _SDCard 1 . `E2692 1 ]
"515
[; ;SD_PIC.c: 515:         }
}
[e $U 404  ]
"516
[; ;SD_PIC.c: 516:         else{
[e :U 403 ]
{
"517
[; ;SD_PIC.c: 517:             SDCard.Type = TYPE_SDSC;
[e = . _SDCard 1 . `E2692 0 ]
"518
[; ;SD_PIC.c: 518:         }
}
[e :U 404 ]
"522
[; ;SD_PIC.c: 522:         for(unsigned char i = 0; i < 3; i++){
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 3 `i 405  ]
[e $U 406  ]
[e :U 405 ]
{
"523
[; ;SD_PIC.c: 523:             spiReceive();
[e ( _spiReceive ..  ]
"524
[; ;SD_PIC.c: 524:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 3 `i 405  ]
[e :U 406 ]
}
"525
[; ;SD_PIC.c: 525:         LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"526
[; ;SD_PIC.c: 526:     }
}
[e :U 402 ]
"529
[; ;SD_PIC.c: 529:     while(SD_Command(CMD16, 512) != R1_READY_STATE){ continue; }
[e $U 408  ]
[e :U 409 ]
{
[e $U 408  ]
}
[e :U 408 ]
[e $ != -> ( _SD_Command (2 , _CMD16 -> -> -> 512 `i `l `ul `i -> _R1_READY_STATE `i 409  ]
[e :U 410 ]
"530
[; ;SD_PIC.c: 530:     SDCard.blockSize = 512;
[e = . _SDCard 10 -> -> 512 `i `us ]
"533
[; ;SD_PIC.c: 533:     SD_Command(CMD9, 0);
[e ( _SD_Command (2 , _CMD9 -> -> -> 0 `i `l `ul ]
"534
[; ;SD_PIC.c: 534:     LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"535
[; ;SD_PIC.c: 535:     while(spiReceive() != START_BLOCK){ continue; }
[e $U 411  ]
[e :U 412 ]
{
[e $U 411  ]
}
[e :U 411 ]
[e $ != -> ( _spiReceive ..  `i -> _START_BLOCK `i 412  ]
[e :U 413 ]
"536
[; ;SD_PIC.c: 536:     for(unsigned char i = 0; i < 16; i++){
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 414  ]
[e $U 415  ]
[e :U 414 ]
{
"537
[; ;SD_PIC.c: 537:         arr_response[i] = spiReceive();
[e = *U + &U _arr_response * -> _i `ux -> -> # *U &U _arr_response `ui `ux ( _spiReceive ..  ]
"538
[; ;SD_PIC.c: 538:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 414  ]
[e :U 415 ]
}
"539
[; ;SD_PIC.c: 539:     spiReceive();
[e ( _spiReceive ..  ]
"540
[; ;SD_PIC.c: 540:     spiReceive();
[e ( _spiReceive ..  ]
"541
[; ;SD_PIC.c: 541:     LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"543
[; ;SD_PIC.c: 543:     if(SDCard.SDversion == 2){
[e $ ! == -> . _SDCard 0 `i -> 2 `i 417  ]
{
"548
[; ;SD_PIC.c: 548:         unsigned long tempSize = arr_response[9] + 1UL;
[v _tempSize `ul ~T0 @X0 1 a ]
[e = _tempSize + -> *U + &U _arr_response * -> -> -> 9 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `ul -> 1 `ul ]
"549
[; ;SD_PIC.c: 549:         tempSize |= (unsigned long)(arr_response[8] << 8);
[e =| _tempSize -> << -> *U + &U _arr_response * -> -> -> 8 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 8 `i `ul ]
"550
[; ;SD_PIC.c: 550:         tempSize |= (unsigned long)(arr_response[7] & 0x3F) << 16;
[e =| _tempSize << -> & -> *U + &U _arr_response * -> -> -> 7 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 63 `i `ul -> 16 `i ]
"551
[; ;SD_PIC.c: 551:         SDCard.size = tempSize * 0.524288;
[e = . _SDCard 12 * -> _tempSize `d .0.524288 ]
"552
[; ;SD_PIC.c: 552:         SDCard.numBlocks = (unsigned long)(SDCard.size * 2048);
[e = . _SDCard 11 -> * . _SDCard 12 -> -> 2048 `i `d `ul ]
"553
[; ;SD_PIC.c: 553:      }
}
[e $U 418  ]
"554
[; ;SD_PIC.c: 554:      else{
[e :U 417 ]
{
"561
[; ;SD_PIC.c: 561:         unsigned long tempSize = (unsigned long)(arr_response[6] & 0x03) << 4;
[v _tempSize `ul ~T0 @X0 1 a ]
[e = _tempSize << -> & -> *U + &U _arr_response * -> -> -> 6 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 3 `i `ul -> 4 `i ]
"562
[; ;SD_PIC.c: 562:         tempSize |= (unsigned long)(arr_response[7] << 2);
[e =| _tempSize -> << -> *U + &U _arr_response * -> -> -> 7 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 2 `i `ul ]
"563
[; ;SD_PIC.c: 563:         tempSize |= (unsigned long)((arr_response[8] & 0xC0) >> 2) + 1;
[e =| _tempSize + -> >> & -> *U + &U _arr_response * -> -> -> 8 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 192 `i -> 2 `i `ul -> -> -> 1 `i `l `ul ]
"564
[; ;SD_PIC.c: 564:         tempSize = tempSize << (((unsigned long)
[e = _tempSize << _tempSize + | -> << & -> *U + &U _arr_response * -> -> -> 9 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 3 `i -> 1 `i `ul -> >> & -> *U + &U _arr_response * -> -> -> 10 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 128 `i -> 7 `i `ul -> -> -> 2 `i `l `ul ]
"567
[; ;SD_PIC.c: 567:         tempSize = tempSize << (unsigned long)(arr_response[5] & 0x0F);
[e = _tempSize << _tempSize -> & -> *U + &U _arr_response * -> -> -> 5 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 15 `i `ul ]
"568
[; ;SD_PIC.c: 568:         SDCard.size = (unsigned long)tempSize;
[e = . _SDCard 12 -> _tempSize `d ]
"569
[; ;SD_PIC.c: 569:         SDCard.numBlocks = (unsigned long)(SDCard.size / SDCard.blockSize);
[e = . _SDCard 11 -> / . _SDCard 12 -> -> . _SDCard 10 `ui `d `ul ]
"570
[; ;SD_PIC.c: 570:     }
}
[e :U 418 ]
"573
[; ;SD_PIC.c: 573:     SD_Command(CMD10, 0);
[e ( _SD_Command (2 , _CMD10 -> -> -> 0 `i `l `ul ]
"575
[; ;SD_PIC.c: 575:     LATEbits.LATE2 = 0;
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
"578
[; ;SD_PIC.c: 578:     do{
[e :U 421 ]
{
"579
[; ;SD_PIC.c: 579:         response = spiReceive();
[e = _response ( _spiReceive ..  ]
"580
[; ;SD_PIC.c: 580:     }while(response != START_BLOCK);
}
[e $ != -> _response `i -> _START_BLOCK `i 421  ]
[e :U 420 ]
"582
[; ;SD_PIC.c: 582:     for(unsigned char i = 0; i < 16; i++){
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 422  ]
[e $U 423  ]
[e :U 422 ]
{
"583
[; ;SD_PIC.c: 583:         arr_response[i] = spiReceive();
[e = *U + &U _arr_response * -> _i `ux -> -> # *U &U _arr_response `ui `ux ( _spiReceive ..  ]
"584
[; ;SD_PIC.c: 584:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 422  ]
[e :U 423 ]
}
"585
[; ;SD_PIC.c: 585:     spiReceive();
[e ( _spiReceive ..  ]
"586
[; ;SD_PIC.c: 586:     spiReceive();
[e ( _spiReceive ..  ]
"587
[; ;SD_PIC.c: 587:     LATEbits.LATE2 = 1;
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
"589
[; ;SD_PIC.c: 589:     SDCard.MID = arr_response[0];
[e = . _SDCard 2 *U + &U _arr_response * -> -> -> 0 `i `ui `ux -> -> # *U &U _arr_response `ui `ux ]
"590
[; ;SD_PIC.c: 590:     SDCard.OID = (unsigned short)(arr_response[1] << 8U) | arr_response[2];
[e = . _SDCard 3 -> | -> -> << -> *U + &U _arr_response * -> -> -> 1 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 8 `ui `us `ui -> *U + &U _arr_response * -> -> -> 2 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `ui `us ]
"591
[; ;SD_PIC.c: 591:     SDCard.PHMH = arr_response[3];
[e = . _SDCard 5 *U + &U _arr_response * -> -> -> 3 `i `ui `ux -> -> # *U &U _arr_response `ui `ux ]
"595
[; ;SD_PIC.c: 595:     SDCard.PHML = (unsigned long)arr_response[4] << 24U;
[e = . _SDCard 4 << -> *U + &U _arr_response * -> -> -> 4 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `ul -> 24 `ui ]
"596
[; ;SD_PIC.c: 596:     SDCard.PHML |= (unsigned long)arr_response[5] << 16U;
[e =| . _SDCard 4 << -> *U + &U _arr_response * -> -> -> 5 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `ul -> 16 `ui ]
"597
[; ;SD_PIC.c: 597:     SDCard.PHML |= (unsigned long)arr_response[6] << 8U;
[e =| . _SDCard 4 << -> *U + &U _arr_response * -> -> -> 6 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `ul -> 8 `ui ]
"598
[; ;SD_PIC.c: 598:     SDCard.PHML |= (unsigned long)arr_response[7];
[e =| . _SDCard 4 -> *U + &U _arr_response * -> -> -> 7 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `ul ]
"600
[; ;SD_PIC.c: 600:     SDCard.PRV = arr_response[8];
[e = . _SDCard 6 *U + &U _arr_response * -> -> -> 8 `i `ui `ux -> -> # *U &U _arr_response `ui `ux ]
"604
[; ;SD_PIC.c: 604:     SDCard.PSN = (unsigned long)arr_response[9] << 24U;
[e = . _SDCard 7 << -> *U + &U _arr_response * -> -> -> 9 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `ul -> 24 `ui ]
"605
[; ;SD_PIC.c: 605:     SDCard.PSN |= (unsigned long)arr_response[10] << 16U;
[e =| . _SDCard 7 << -> *U + &U _arr_response * -> -> -> 10 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `ul -> 16 `ui ]
"606
[; ;SD_PIC.c: 606:     SDCard.PSN |= (unsigned long)arr_response[11] << 8U;
[e =| . _SDCard 7 << -> *U + &U _arr_response * -> -> -> 11 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `ul -> 8 `ui ]
"607
[; ;SD_PIC.c: 607:     SDCard.PSN |= (unsigned long)arr_response[12];
[e =| . _SDCard 7 -> *U + &U _arr_response * -> -> -> 12 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `ul ]
"609
[; ;SD_PIC.c: 609:     SDCard.MDT = (unsigned short)(((arr_response[13] & 0x0F) << 8U)) |
[e = . _SDCard 8 -> | -> -> << & -> *U + &U _arr_response * -> -> -> 13 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 15 `i -> 8 `ui `us `ui -> *U + &U _arr_response * -> -> -> 14 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `ui `us ]
"611
[; ;SD_PIC.c: 611:     SDCard.CRC = arr_response[15] & 0xFE;
[e = . _SDCard 9 -> & -> *U + &U _arr_response * -> -> -> 15 `i `ui `ux -> -> # *U &U _arr_response `ui `ux `i -> 254 `i `uc ]
"614
[; ;SD_PIC.c: 614:     { LATEbits.LATE2 = 1; SSPCON1bits.SSPEN = 0;};
{
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
[e = . . _SSPCON1bits 0 2 -> -> 0 `i `uc ]
}
"615
[; ;SD_PIC.c: 615:     OSCCON = last_OSCCON;
[e = _OSCCON _last_OSCCON ]
"616
[; ;SD_PIC.c: 616:     OSCTUNE = last_OSCTUNE;
[e = _OSCTUNE _last_OSCTUNE ]
"619
[; ;SD_PIC.c: 619:     while(!OSCCONbits.IOFS){ _delay((unsigned long)((20)*(32000000/4000000.0))); }
[e $U 425  ]
[e :U 426 ]
{
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 32000000 `l `d .4000000.0 `ul ]
}
[e :U 425 ]
[e $ ! != -> . . _OSCCONbits 0 1 `i -> 0 `i 426  ]
[e :U 427 ]
"622
[; ;SD_PIC.c: 622:     spiInit(16);
[e ( _spiInit (1 -> -> 16 `i `uc ]
"625
[; ;SD_PIC.c: 625:     SDCard.write.MBW_flag_first = 1;
[e = . . _SDCard 14 2 -> -> 1 `i `uc ]
"626
[; ;SD_PIC.c: 626:     SDCard.write.MBW_startBlock = 0;
[e = . . _SDCard 14 1 -> -> -> 0 `i `l `ul ]
"627
[; ;SD_PIC.c: 627:     SDCard.write.lastBlockWritten = 0;
[e = . . _SDCard 14 0 -> -> -> 0 `i `l `ul ]
"628
[; ;SD_PIC.c: 628:     SDCard.read.MBR_flag_first = 1;
[e = . . _SDCard 15 2 -> -> 1 `i `uc ]
"629
[; ;SD_PIC.c: 629:     SDCard.read.MBR_startBlock = 0;
[e = . . _SDCard 15 1 -> -> -> 0 `i `l `ul ]
"630
[; ;SD_PIC.c: 630:     SDCard.read.lastBlockRead = 0;
[e = . . _SDCard 15 0 -> -> -> 0 `i `l `ul ]
"633
[; ;SD_PIC.c: 633:     SDCard.init = 1;
[e = . _SDCard 13 -> -> 1 `i `uc ]
"634
[; ;SD_PIC.c: 634: }
[e :UE 371 ]
}
"643
[; ;SD_PIC.c: 643: void read_init_sd_card(void)
[v _read_init_sd_card `(v ~T0 @X0 1 ef ]
"644
[; ;SD_PIC.c: 644: {
{
[e :U _read_init_sd_card ]
[f ]
"645
[; ;SD_PIC.c: 645:     unsigned char PNM[5];
[v _PNM `uc ~T0 @X0 -> 5 `i a ]
"646
[; ;SD_PIC.c: 646:     initSD();
[e ( _initSD ..  ]
"647
[; ;SD_PIC.c: 647:     if(SDCard.init){
[e $ ! != -> . _SDCard 13 `i -> 0 `i 429  ]
{
"648
[; ;SD_PIC.c: 648:             printf("SD init success!\r\n");
[e ( _printf :s 1C ]
"649
[; ;SD_PIC.c: 649:             switch(SDCard.Type){
[e $U 431  ]
{
"650
[; ;SD_PIC.c: 650:                 case TYPE_SDHC_SDXC: printf("Type: SDHC/SDXC\r\n");
[e :U 432 ]
[e ( _printf :s 2C ]
"651
[; ;SD_PIC.c: 651:                     break;
[e $U 430  ]
"652
[; ;SD_PIC.c: 652:                 case TYPE_SDSC: printf("Type: SDSC\r\n");
[e :U 433 ]
[e ( _printf :s 3C ]
"653
[; ;SD_PIC.c: 653:                     break;
[e $U 430  ]
"654
[; ;SD_PIC.c: 654:                 case TYPE_MMC: printf("Type: MMC\r\n");
[e :U 434 ]
[e ( _printf :s 4C ]
"655
[; ;SD_PIC.c: 655:                     break;
[e $U 430  ]
"656
[; ;SD_PIC.c: 656:                 default:
[e :U 435 ]
"657
[; ;SD_PIC.c: 657:                     printf("Type: Unknown\r\n");
[e ( _printf :s 5C ]
"658
[; ;SD_PIC.c: 658:                     break;
[e $U 430  ]
"659
[; ;SD_PIC.c: 659:             }
}
[e $U 430  ]
[e :U 431 ]
[e [\ -> . _SDCard 1 `ui , $ -> . `E2692 1 `ui 432
 , $ -> . `E2692 0 `ui 433
 , $ -> . `E2692 2 `ui 434
 435 ]
[e :U 430 ]
"660
[; ;SD_PIC.c: 660:             _delay((unsigned long)((500)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"662
[; ;SD_PIC.c: 662:             printf("BlkSize: %d b\r\n", SDCard.blockSize);
[e ( _printf , :s 6C -> . _SDCard 10 `ui ]
"663
[; ;SD_PIC.c: 663:             printf("#Blks: %lu\r\n", SDCard.numBlocks);
[e ( _printf , :s 7C . _SDCard 11 ]
"664
[; ;SD_PIC.c: 664:             _delay((unsigned long)((500)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"666
[; ;SD_PIC.c: 666:             printf("SD Version: %u\r\n", SDCard.SDversion);
[e ( _printf , :s 8C -> . _SDCard 0 `i ]
"667
[; ;SD_PIC.c: 667:             printf("MFG ID: 0x%x\r\n", SDCard.MID);
[e ( _printf , :s 9C -> . _SDCard 2 `i ]
"668
[; ;SD_PIC.c: 668:             _delay((unsigned long)((500)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"670
[; ;SD_PIC.c: 670:             printf("OEM ID: %c%c\r\n", SDCard.OID >> 8, SDCard.OID & 0xFF);
[e ( _printf , , :s 10C >> -> . _SDCard 3 `ui -> 8 `i & -> . _SDCard 3 `ui -> -> 255 `i `ui ]
"672
[; ;SD_PIC.c: 672:             PNM[0] = SDCard.PHML & 0xFF;
[e = *U + &U _PNM * -> -> -> 0 `i `ui `ux -> -> # *U &U _PNM `ui `ux -> & . _SDCard 4 -> -> -> 255 `i `l `ul `uc ]
"673
[; ;SD_PIC.c: 673:             PNM[1] = (SDCard.PHML >> 8) & 0xFF;
[e = *U + &U _PNM * -> -> -> 1 `i `ui `ux -> -> # *U &U _PNM `ui `ux -> & >> . _SDCard 4 -> 8 `i -> -> -> 255 `i `l `ul `uc ]
"674
[; ;SD_PIC.c: 674:             PNM[2] = (SDCard.PHML >> 16) & 0xFF;
[e = *U + &U _PNM * -> -> -> 2 `i `ui `ux -> -> # *U &U _PNM `ui `ux -> & >> . _SDCard 4 -> 16 `i -> -> -> 255 `i `l `ul `uc ]
"675
[; ;SD_PIC.c: 675:             PNM[3] = (SDCard.PHML >> 24) & 0xFF;
[e = *U + &U _PNM * -> -> -> 3 `i `ui `ux -> -> # *U &U _PNM `ui `ux -> & >> . _SDCard 4 -> 24 `i -> -> -> 255 `i `l `ul `uc ]
"676
[; ;SD_PIC.c: 676:             PNM[4] = SDCard.PHMH;
[e = *U + &U _PNM * -> -> -> 4 `i `ui `ux -> -> # *U &U _PNM `ui `ux . _SDCard 5 ]
"677
[; ;SD_PIC.c: 677:             printf("PNM: %c%c%c%c%c\r\n", PNM[4], PNM[3], PNM[2], PNM[1], PNM[0]);
[e ( _printf , , , , , :s 11C -> *U + &U _PNM * -> -> -> 4 `i `ui `ux -> -> # *U &U _PNM `ui `ux `i -> *U + &U _PNM * -> -> -> 3 `i `ui `ux -> -> # *U &U _PNM `ui `ux `i -> *U + &U _PNM * -> -> -> 2 `i `ui `ux -> -> # *U &U _PNM `ui `ux `i -> *U + &U _PNM * -> -> -> 1 `i `ui `ux -> -> # *U &U _PNM `ui `ux `i -> *U + &U _PNM * -> -> -> 0 `i `ui `ux -> -> # *U &U _PNM `ui `ux `i ]
"678
[; ;SD_PIC.c: 678:             _delay((unsigned long)((500)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"680
[; ;SD_PIC.c: 680:             printf("PRV: %u.%u\r\n", ((SDCard.PRV >> 4) & 0x0F), (SDCard.PRV & 0x0F));
[e ( _printf , , :s 12C & >> -> . _SDCard 6 `i -> 4 `i -> 15 `i & -> . _SDCard 6 `i -> 15 `i ]
"681
[; ;SD_PIC.c: 681:             printf("PSN: 0x%x\r\n", (SDCard.PSN >> 16));
[e ( _printf , :s 13C >> . _SDCard 7 -> 16 `i ]
"682
[; ;SD_PIC.c: 682:             printf("%x\r\n",SDCard.PSN & 0xFFFF);
[e ( _printf , :s 14C & . _SDCard 7 -> -> 65535 `ui `ul ]
"683
[; ;SD_PIC.c: 683:             _delay((unsigned long)((500)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"685
[; ;SD_PIC.c: 685:             unsigned short year = 2000 + ((SDCard.MDT >> 4) & 0xFF);
[v _year `us ~T0 @X0 1 a ]
[e = _year -> + -> -> 2000 `i `ui & >> -> . _SDCard 8 `ui -> 4 `i -> -> 255 `i `ui `us ]
"686
[; ;SD_PIC.c: 686:             unsigned char month = SDCard.MDT & 0xF;
[v _month `uc ~T0 @X0 1 a ]
[e = _month -> & -> . _SDCard 8 `ui -> -> 15 `i `ui `uc ]
"687
[; ;SD_PIC.c: 687:             printf("MDT: %u/%u\r\n", month, year);
[e ( _printf , , :s 15C -> _month `i -> _year `ui ]
"688
[; ;SD_PIC.c: 688:             printf("CRC7: %u\r\n", SDCard.CRC);
[e ( _printf , :s 16C -> . _SDCard 9 `i ]
"689
[; ;SD_PIC.c: 689:             _delay((unsigned long)((500)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"691
[; ;SD_PIC.c: 691:             printf("Number of MB:");
[e ( _printf :s 17C ]
"692
[; ;SD_PIC.c: 692:             printf("%.2f \r\n", SDCard.size);
[e ( _printf , :s 18C . _SDCard 12 ]
"693
[; ;SD_PIC.c: 693:             _delay((unsigned long)((500)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"695
[; ;SD_PIC.c: 695:             printf("Number of blocks:");
[e ( _printf :s 19C ]
"696
[; ;SD_PIC.c: 696:             printf("%ul \r\n", SDCard.numBlocks);
[e ( _printf , :s 20C . _SDCard 11 ]
"697
[; ;SD_PIC.c: 697:             _delay((unsigned long)((500)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"698
[; ;SD_PIC.c: 698:         }
}
[e $U 436  ]
"699
[; ;SD_PIC.c: 699:         else{
[e :U 429 ]
{
"700
[; ;SD_PIC.c: 700:             printf("SD init failed!\r\n");
[e ( _printf :s 21C ]
"701
[; ;SD_PIC.c: 701:         }
}
[e :U 436 ]
"703
[; ;SD_PIC.c: 703: }
[e :UE 428 ]
}
"711
[; ;SD_PIC.c: 711: unsigned char average(unsigned char* array, unsigned short n){
[v _average `(uc ~T0 @X0 1 ef2`*uc`us ]
{
[e :U _average ]
[v _array `*uc ~T0 @X0 1 r1 ]
[v _n `us ~T0 @X0 1 r2 ]
[f ]
"712
[; ;SD_PIC.c: 712:     unsigned short idx = 0;
[v _idx `us ~T0 @X0 1 a ]
[e = _idx -> -> 0 `i `us ]
"713
[; ;SD_PIC.c: 713:     unsigned long sum = 0;
[v _sum `ul ~T0 @X0 1 a ]
[e = _sum -> -> -> 0 `i `l `ul ]
"714
[; ;SD_PIC.c: 714:     while(idx < n){
[e $U 438  ]
[e :U 439 ]
{
"715
[; ;SD_PIC.c: 715:         sum += array[idx];
[e =+ _sum -> *U + _array * -> _idx `ux -> -> # *U _array `ui `ux `ul ]
"716
[; ;SD_PIC.c: 716:         idx++;
[e ++ _idx -> -> 1 `i `us ]
"717
[; ;SD_PIC.c: 717:     }
}
[e :U 438 ]
"714
[; ;SD_PIC.c: 714:     while(idx < n){
[e $ < -> _idx `ui -> _n `ui 439  ]
[e :U 440 ]
"718
[; ;SD_PIC.c: 718:     return sum / n;
[e ) -> / _sum -> _n `ul `uc ]
[e $UE 437  ]
"719
[; ;SD_PIC.c: 719: }
[e :UE 437 ]
}
"723
[; ;SD_PIC.c: 723: void single_block_read(void)
[v _single_block_read `(v ~T0 @X0 1 ef ]
"724
[; ;SD_PIC.c: 724: {
{
[e :U _single_block_read ]
[f ]
"726
[; ;SD_PIC.c: 726:     initSD();
[e ( _initSD ..  ]
"727
[; ;SD_PIC.c: 727:     if(SDCard.init){
[e $ ! != -> . _SDCard 13 `i -> 0 `i 442  ]
{
"728
[; ;SD_PIC.c: 728:         printf("Init success!\r\n");
[e ( _printf :s 22C ]
"729
[; ;SD_PIC.c: 729:     }
}
[e $U 443  ]
"730
[; ;SD_PIC.c: 730:     else{
[e :U 442 ]
{
"731
[; ;SD_PIC.c: 731:         printf("Init failed\r\n");
[e ( _printf :s 23C ]
"732
[; ;SD_PIC.c: 732:         while(1);
[e :U 445 ]
[e :U 444 ]
[e $U 445  ]
[e :U 446 ]
"733
[; ;SD_PIC.c: 733:     }
}
[e :U 443 ]
"734
[; ;SD_PIC.c: 734:     _delay((unsigned long)((1000)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"736
[; ;SD_PIC.c: 736:     printf("Reading sector 0\r\n");
[e ( _printf :s 24C ]
"737
[; ;SD_PIC.c: 737:     _delay((unsigned long)((1000)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"740
[; ;SD_PIC.c: 740:     if(SD_SingleBlockRead(0, SDreadBuffer)){
[e $ ! != -> ( _SD_SingleBlockRead (2 , -> -> -> 0 `i `l `ul &U _SDreadBuffer `i -> 0 `i 447  ]
{
"741
[; ;SD_PIC.c: 741:         printf("Avg: %d\r\n", average(SDreadBuffer, 512));
[e ( _printf , :s 25C -> ( _average (2 , &U _SDreadBuffer -> -> 512 `i `us `i ]
"742
[; ;SD_PIC.c: 742:     }
}
[e $U 448  ]
"743
[; ;SD_PIC.c: 743:     else{
[e :U 447 ]
{
"745
[; ;SD_PIC.c: 745:         printf("Failure!\r\n");
[e ( _printf :s 26C ]
"746
[; ;SD_PIC.c: 746:     }
}
[e :U 448 ]
"747
[; ;SD_PIC.c: 747:     _delay((unsigned long)((1000)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"748
[; ;SD_PIC.c: 748: }
[e :UE 441 ]
}
"750
[; ;SD_PIC.c: 750: void multiple_block_write(void)
[v _multiple_block_write `(v ~T0 @X0 1 ef ]
"751
[; ;SD_PIC.c: 751: {
{
[e :U _multiple_block_write ]
[f ]
"752
[; ;SD_PIC.c: 752:         unsigned char firstBlock = 1;
[v _firstBlock `uc ~T0 @X0 1 a ]
[e = _firstBlock -> -> 1 `i `uc ]
"753
[; ;SD_PIC.c: 753:     unsigned short numWrites = 1000;
[v _numWrites `us ~T0 @X0 1 a ]
[e = _numWrites -> -> 1000 `i `us ]
"754
[; ;SD_PIC.c: 754:     unsigned long i;
[v _i `ul ~T0 @X0 1 a ]
"757
[; ;SD_PIC.c: 757:     for(i = 0; i < 512; i++){
{
[e = _i -> -> -> 0 `i `l `ul ]
[e $ < _i -> -> -> 512 `i `l `ul 450  ]
[e $U 451  ]
[e :U 450 ]
{
"758
[; ;SD_PIC.c: 758:         SDwriteBuffer[i] = 0x34;
[e = *U + &U _SDwriteBuffer * -> _i `ux -> -> # *U &U _SDwriteBuffer `ui `ux -> -> 52 `i `uc ]
"759
[; ;SD_PIC.c: 759:     }
}
[e ++ _i -> -> -> 1 `i `l `ul ]
[e $ < _i -> -> -> 512 `i `l `ul 450  ]
[e :U 451 ]
}
"761
[; ;SD_PIC.c: 761:     printf("MBW Start...\r\n");
[e ( _printf :s 27C ]
"762
[; ;SD_PIC.c: 762:     SD_MBW_Start(firstBlock, numWrites);
[e ( _SD_MBW_Start (2 , -> _firstBlock `ul -> _numWrites `ul ]
"764
[; ;SD_PIC.c: 764:     for(i = 0; i < numWrites; i++){
{
[e = _i -> -> -> 0 `i `l `ul ]
[e $U 456  ]
[e :U 453 ]
{
"766
[; ;SD_PIC.c: 766:         if(!SD_MBW_Send(SDwriteBuffer)){
[e $ ! ! != -> ( _SD_MBW_Send (1 &U _SDwriteBuffer `i -> 0 `i 457  ]
{
"767
[; ;SD_PIC.c: 767:             break;
[e $U 454  ]
"768
[; ;SD_PIC.c: 768:         }
}
[e :U 457 ]
"769
[; ;SD_PIC.c: 769:         if(i % 100 == 0){
[e $ ! == % _i -> -> -> 100 `i `l `ul -> -> -> 0 `i `l `ul 458  ]
{
"771
[; ;SD_PIC.c: 771:             printf("Done: %lu\r\n", i);
[e ( _printf , :s 28C _i ]
"772
[; ;SD_PIC.c: 772:         }
}
[e :U 458 ]
"773
[; ;SD_PIC.c: 773:     }
}
[e ++ _i -> -> -> 1 `i `l `ul ]
[e :U 456 ]
[e $ < _i -> _numWrites `ul 453  ]
[e :U 454 ]
}
"774
[; ;SD_PIC.c: 774:     SD_MBW_Stop();
[e ( _SD_MBW_Stop ..  ]
"775
[; ;SD_PIC.c: 775:     { LATEbits.LATE2 = 1; SSPCON1bits.SSPEN = 0;};
{
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
[e = . . _SSPCON1bits 0 2 -> -> 0 `i `uc ]
}
"776
[; ;SD_PIC.c: 776:     printf("Done MBW!\r\n");
[e ( _printf :s 29C ]
"777
[; ;SD_PIC.c: 777:     printf("Done %lu\r\n", i);
[e ( _printf , :s 30C _i ]
"778
[; ;SD_PIC.c: 778:     _delay((unsigned long)((1000)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"780
[; ;SD_PIC.c: 780:     { SSPCON1bits.SSPEN = 1; LATEbits.LATE2 = 0;};
{
[e = . . _SSPCON1bits 0 2 -> -> 1 `i `uc ]
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
}
"782
[; ;SD_PIC.c: 782: }
[e :UE 449 ]
}
"784
[; ;SD_PIC.c: 784: void multiple_block_read(void)
[v _multiple_block_read `(v ~T0 @X0 1 ef ]
"785
[; ;SD_PIC.c: 785: {
{
[e :U _multiple_block_read ]
[f ]
"786
[; ;SD_PIC.c: 786:     unsigned long i;
[v _i `ul ~T0 @X0 1 a ]
"787
[; ;SD_PIC.c: 787:     unsigned char firstBlock = 1;
[v _firstBlock `uc ~T0 @X0 1 a ]
[e = _firstBlock -> -> 1 `i `uc ]
"788
[; ;SD_PIC.c: 788:     unsigned short numWrites = 1000;
[v _numWrites `us ~T0 @X0 1 a ]
[e = _numWrites -> -> 1000 `i `us ]
"789
[; ;SD_PIC.c: 789:     for(i = 0; i < sizeof(SDreadBuffer); i++)
{
[e = _i -> -> -> 0 `i `l `ul ]
[e $ < _i -> -> # _SDreadBuffer `ui `ul 460  ]
[e $U 461  ]
[e :U 460 ]
"790
[; ;SD_PIC.c: 790:     {
{
"792
[; ;SD_PIC.c: 792:         SDreadBuffer[i] = 0;
[e = *U + &U _SDreadBuffer * -> _i `ux -> -> # *U &U _SDreadBuffer `ui `ux -> -> 0 `i `uc ]
"793
[; ;SD_PIC.c: 793:     }
}
[e ++ _i -> -> -> 1 `i `l `ul ]
[e $ < _i -> -> # _SDreadBuffer `ui `ul 460  ]
[e :U 461 ]
}
"796
[; ;SD_PIC.c: 796:     unsigned long avg = 0;
[v _avg `ul ~T0 @X0 1 a ]
[e = _avg -> -> -> 0 `i `l `ul ]
"800
[; ;SD_PIC.c: 800:     SD_MBR_Start(SDCard.write.MBW_startBlock);
[e ( _SD_MBR_Start (1 . . _SDCard 14 1 ]
"802
[; ;SD_PIC.c: 802:     printf("Reading sectors ");
[e ( _printf :s 31C ]
"803
[; ;SD_PIC.c: 803:     printf("%d-%d\r\n", firstBlock, firstBlock + numWrites - 1);
[e ( _printf , , :s 32C -> _firstBlock `i - + -> _firstBlock `ui -> _numWrites `ui -> -> 1 `i `ui ]
"805
[; ;SD_PIC.c: 805:     for(i = 0;
{
[e = _i -> -> -> 0 `i `l `ul ]
[e $U 466  ]
[e :U 463 ]
"809
[; ;SD_PIC.c: 809:     {
{
"811
[; ;SD_PIC.c: 811:         SD_MBR_Receive(SDreadBuffer);
[e ( _SD_MBR_Receive (1 &U _SDreadBuffer ]
"815
[; ;SD_PIC.c: 815:         avg += average(SDreadBuffer, 512);
[e =+ _avg -> ( _average (2 , &U _SDreadBuffer -> -> 512 `i `us `ul ]
"817
[; ;SD_PIC.c: 817:         if((i > 0) && (i % 250 == 0)){
[e $ ! && > _i -> -> -> 0 `i `l `ul == % _i -> -> -> 250 `i `l `ul -> -> -> 0 `i `l `ul 467  ]
{
"818
[; ;SD_PIC.c: 818:             printf(".");
[e ( _printf :s 33C ]
"819
[; ;SD_PIC.c: 819:         }
}
[e :U 467 ]
"820
[; ;SD_PIC.c: 820:     }
}
[e ++ _i -> -> -> 1 `i `l `ul ]
[e :U 466 ]
[e $ < _i + - . . _SDCard 14 0 . . _SDCard 14 1 -> -> -> 1 `i `l `ul 463  ]
[e :U 464 ]
}
"821
[; ;SD_PIC.c: 821:     SD_MBR_Stop();
[e ( _SD_MBR_Stop ..  ]
"825
[; ;SD_PIC.c: 825:     avg /= (SDCard.read.lastBlockRead - SDCard.read.MBR_startBlock);
[e =/ _avg - . . _SDCard 15 0 . . _SDCard 15 1 ]
"827
[; ;SD_PIC.c: 827:     { LATEbits.LATE2 = 1; SSPCON1bits.SSPEN = 0;};
{
[e = . . _LATEbits 0 2 -> -> 1 `i `uc ]
[e = . . _SSPCON1bits 0 2 -> -> 0 `i `uc ]
}
"829
[; ;SD_PIC.c: 829:     printf("Sec %d-%d\r\n", (int)firstBlock, (int)(firstBlock + numWrites - 1));
[e ( _printf , , :s 34C -> _firstBlock `i -> - + -> _firstBlock `ui -> _numWrites `ui -> -> 1 `i `ui `i ]
"830
[; ;SD_PIC.c: 830:     printf("Avg: %d\r\n", (int)avg);
[e ( _printf , :s 35C -> _avg `i ]
"832
[; ;SD_PIC.c: 832: }
[e :UE 459 ]
}
"834
[; ;SD_PIC.c: 834: void single_block_write(unsigned long sector)
[v _single_block_write `(v ~T0 @X0 1 ef1`ul ]
"835
[; ;SD_PIC.c: 835: {
{
[e :U _single_block_write ]
"834
[; ;SD_PIC.c: 834: void single_block_write(unsigned long sector)
[v _sector `ul ~T0 @X0 1 r1 ]
"835
[; ;SD_PIC.c: 835: {
[f ]
"838
[; ;SD_PIC.c: 838:     { SSPCON1bits.SSPEN = 1; LATEbits.LATE2 = 0;};
{
[e = . . _SSPCON1bits 0 2 -> -> 1 `i `uc ]
[e = . . _LATEbits 0 2 -> -> 0 `i `uc ]
}
"839
[; ;SD_PIC.c: 839:     SD_EraseBlocks(sector, sector);
[e ( _SD_EraseBlocks (2 , _sector _sector ]
"840
[; ;SD_PIC.c: 840:     while(spiReceive() != 0xFF){ continue; }
[e $U 469  ]
[e :U 470 ]
{
[e $U 469  ]
}
[e :U 469 ]
[e $ != -> ( _spiReceive ..  `i -> 255 `i 470  ]
[e :U 471 ]
"843
[; ;SD_PIC.c: 843:     while(!SD_SingleBlockWrite(sector, SDwriteBuffer));
[e $U 472  ]
[e :U 473 ]
[e :U 472 ]
[e $ ! != -> ( _SD_SingleBlockWrite (2 , _sector &U _SDwriteBuffer `i -> 0 `i 473  ]
[e :U 474 ]
"845
[; ;SD_PIC.c: 845:     printf("Single block\r\n");
[e ( _printf :s 36C ]
"847
[; ;SD_PIC.c: 847:     printf("write finished in sector %d\r\n",sector);
[e ( _printf , :s 37C _sector ]
"848
[; ;SD_PIC.c: 848:     _delay((unsigned long)((1000)*(32000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
"849
[; ;SD_PIC.c: 849: }
[e :UE 468 ]
}
[a 19C 78 117 109 98 101 114 32 111 102 32 98 108 111 99 107 115 58 0 ]
[a 17C 78 117 109 98 101 114 32 111 102 32 77 66 58 0 ]
[a 33C 46 0 ]
[a 31C 82 101 97 100 105 110 103 32 115 101 99 116 111 114 115 32 0 ]
[a 13C 80 83 78 58 32 48 120 37 120 13 10 0 ]
[a 9C 77 70 71 32 73 68 58 32 48 120 37 120 13 10 0 ]
[a 14C 37 120 13 10 0 ]
[a 30C 68 111 110 101 32 37 108 117 13 10 0 ]
[a 7C 35 66 108 107 115 58 32 37 108 117 13 10 0 ]
[a 28C 68 111 110 101 58 32 37 108 117 13 10 0 ]
[a 15C 77 68 84 58 32 37 117 47 37 117 13 10 0 ]
[a 12C 80 82 86 58 32 37 117 46 37 117 13 10 0 ]
[a 8C 83 68 32 86 101 114 115 105 111 110 58 32 37 117 13 10 0 ]
[a 16C 67 82 67 55 58 32 37 117 13 10 0 ]
[a 5C 84 121 112 101 58 32 85 110 107 110 111 119 110 13 10 0 ]
[a 36C 83 105 110 103 108 101 32 98 108 111 99 107 13 10 0 ]
[a 23C 73 110 105 116 32 102 97 105 108 101 100 13 10 0 ]
[a 34C 83 101 99 32 37 100 45 37 100 13 10 0 ]
[a 32C 37 100 45 37 100 13 10 0 ]
[a 37C 119 114 105 116 101 32 102 105 110 105 115 104 101 100 32 105 110 32 115 101 99 116 111 114 32 37 100 13 10 0 ]
[a 25C 65 118 103 58 32 37 100 13 10 0 ]
[a 35C 65 118 103 58 32 37 100 13 10 0 ]
[a 11C 80 78 77 58 32 37 99 37 99 37 99 37 99 37 99 13 10 0 ]
[a 10C 79 69 77 32 73 68 58 32 37 99 37 99 13 10 0 ]
[a 6C 66 108 107 83 105 122 101 58 32 37 100 32 98 13 10 0 ]
[a 2C 84 121 112 101 58 32 83 68 72 67 47 83 68 88 67 13 10 0 ]
[a 3C 84 121 112 101 58 32 83 68 83 67 13 10 0 ]
[a 4C 84 121 112 101 58 32 77 77 67 13 10 0 ]
[a 24C 82 101 97 100 105 110 103 32 115 101 99 116 111 114 32 48 13 10 0 ]
[a 27C 77 66 87 32 83 116 97 114 116 46 46 46 13 10 0 ]
[a 1C 83 68 32 105 110 105 116 32 115 117 99 99 101 115 115 33 13 10 0 ]
[a 22C 73 110 105 116 32 115 117 99 99 101 115 115 33 13 10 0 ]
[a 26C 70 97 105 108 117 114 101 33 13 10 0 ]
[a 21C 83 68 32 105 110 105 116 32 102 97 105 108 101 100 33 13 10 0 ]
[a 29C 68 111 110 101 32 77 66 87 33 13 10 0 ]
[a 20C 37 117 108 32 13 10 0 ]
[a 18C 37 46 50 102 32 13 10 0 ]
