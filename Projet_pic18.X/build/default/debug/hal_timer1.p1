Version 4.0 HI-TECH Software Intermediate Code
[v F2505 `(v ~T0 @X0 0 tf ]
[v F2506 `(v ~T0 @X0 0 tf ]
[v F2483 `(v ~T0 @X0 0 tf ]
"40 hal_timer1.c
[; ;hal_timer1.c: 40: uint8_t Timer1_Init(const timer1_t *_timer)
[c E2477 0 1 .. ]
[n E2477 . INTERRUPT_LOW_PRIORITY INTERRUPT_HIGH_PRIORITY  ]
"82 ./hal_timer1.h
[; ;./hal_timer1.h: 82: {
[s S270 `*F2483 1 `E2477 1 `us 1 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :2 `uc 1 ]
[n S270 . TMR1_InterruptHandler priority timer1_preload_value timer1_prescaler_value timer1_mode timer1_counter_mode timer1_osc_cfg timer1_reg_rw_mode timer1_reserved ]
"5230 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[s S216 :2 `uc 1 :1 `uc 1 ]
[n S216 . . NOT_T1SYNC ]
"5234
[s S217 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S217 . TMR1ON TMR1CS nT1SYNC T1OSCEN T1CKPS T1RUN RD16 ]
"5243
[s S218 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S218 . . T1SYNC . T1CKPS0 T1CKPS1 ]
"5250
[s S219 :3 `uc 1 :1 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S219 . . SOSCEN . T1RD16 ]
"5229
[u S215 `S216 1 `S217 1 `S218 1 `S219 1 ]
[n S215 . . . . . ]
"5257
[v _T1CONbits `VS215 ~T0 @X0 0 e@4045 ]
[v F2508 `(v ~T0 @X0 1 tf1`*CS270 ]
"29 hal_timer1.c
[; ;hal_timer1.c: 29: static __attribute__((inline)) void Timer1_Mode_Selection(const timer1_t *_timer);
[v _Timer1_Mode_Selection `TF2508 ~T0 @X0 0 s ]
"5341 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[v _TMR1H `Vuc ~T0 @X0 0 e@4047 ]
"5334
[v _TMR1L `Vuc ~T0 @X0 0 e@4046 ]
"2503
[s S86 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S86 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE PSPIE ]
"2513
[s S87 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S87 . . TX1IE RC1IE ]
"2502
[u S85 `S86 1 `S87 1 ]
[n S85 . . . ]
"2519
[v _PIE1bits `VS85 ~T0 @X0 0 e@3997 ]
"2580
[s S89 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S89 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF PSPIF ]
"2590
[s S90 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S90 . . TX1IF RC1IF ]
"2579
[u S88 `S89 1 `S90 1 ]
[n S88 . . . ]
"2596
[v _PIR1bits `VS88 ~T0 @X0 0 e@3998 ]
"6380
[s S258 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S258 . RBIF INT0IF TMR0IF RBIE INT0IE TMR0IE PEIE_GIEL GIE_GIEH ]
"6390
[s S259 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S259 . . INT0F T0IF . INT0E T0IE PEIE GIE ]
"6400
[s S260 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S260 . . GIEL GIEH ]
"6379
[u S257 `S258 1 `S259 1 `S260 1 ]
[n S257 . . . . ]
"6406
[v _INTCONbits `VS257 ~T0 @X0 0 e@4082 ]
[v F2530 `(v ~T0 @X0 0 tf ]
"54 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
"20 ./common.h
[p x OSC  =  XT          ]
"21
[p x FCMEN  =  OFF       ]
"22
[p x IESO  =  OFF        ]
"25
[p x PWRT  =  OFF        ]
"26
[p x BOREN  =  SBORDIS   ]
"27
[p x BORV  =  3          ]
"30
[p x WDT  =  OFF          ]
"31
[p x WDTPS  =  32768     ]
"34
[p x CCP2MX  =  PORTC    ]
"35
[p x PBADEN  =  ON       ]
"36
[p x LPT1OSC  =  OFF     ]
"37
[p x MCLRE  =  ON        ]
"40
[p x STVREN  =  ON       ]
"41
[p x LVP  =  ON          ]
"42
[p x XINST  =  OFF       ]
"45
[p x CP0  =  OFF         ]
"46
[p x CP1  =  OFF         ]
"47
[p x CP2  =  OFF         ]
"48
[p x CP3  =  OFF         ]
"51
[p x CPB  =  OFF         ]
"52
[p x CPD  =  OFF         ]
"55
[p x WRT0  =  OFF        ]
"56
[p x WRT1  =  OFF        ]
"57
[p x WRT2  =  OFF        ]
"58
[p x WRT3  =  OFF        ]
"61
[p x WRTC  =  OFF        ]
"62
[p x WRTB  =  OFF        ]
"63
[p x WRTD  =  OFF        ]
"66
[p x EBTR0  =  OFF       ]
"67
[p x EBTR1  =  OFF       ]
"68
[p x EBTR2  =  OFF       ]
"69
[p x EBTR3  =  OFF       ]
"72
[p x EBTRB  =  OFF       ]
"14 hal_timer1.c
[; ;hal_timer1.c: 14: static uint16_t timer1_preload = 0;
[v _timer1_preload `us ~T0 @X0 1 s ]
[i _timer1_preload
-> -> 0 `i `us
]
"22
[; ;hal_timer1.c: 22:     static void (*TMR1_InterruptHandler)(void) = ((void*)0);
[v _TMR1_InterruptHandler `*F2505 ~T0 @X0 1 s ]
[i _TMR1_InterruptHandler
-> -> -> 0 `i `*v `*F2506
]
"40
[; ;hal_timer1.c: 40: uint8_t Timer1_Init(const timer1_t *_timer)
[v _Timer1_Init `(uc ~T0 @X0 1 ef1`*CS270 ]
"41
[; ;hal_timer1.c: 41: {
{
[e :U _Timer1_Init ]
"40
[; ;hal_timer1.c: 40: uint8_t Timer1_Init(const timer1_t *_timer)
[v __timer `*CS270 ~T0 @X0 1 r1 ]
"41
[; ;hal_timer1.c: 41: {
[f ]
"42
[; ;hal_timer1.c: 42:     uint8_t ret = 0;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"43
[; ;hal_timer1.c: 43:     if(((void*)0) == _timer)
[e $ ! == -> -> -> 0 `i `*v `*CS270 __timer 272  ]
"44
[; ;hal_timer1.c: 44:     {
{
"45
[; ;hal_timer1.c: 45:         ret = 0;
[e = _ret -> -> 0 `i `uc ]
"46
[; ;hal_timer1.c: 46:     }
}
[e $U 273  ]
"47
[; ;hal_timer1.c: 47:     else
[e :U 272 ]
"48
[; ;hal_timer1.c: 48:     {
{
"50
[; ;hal_timer1.c: 50:         (T1CONbits.TMR1ON = 0);
[e = . . _T1CONbits 1 0 -> -> 0 `i `uc ]
"52
[; ;hal_timer1.c: 52:         (T1CONbits.T1CKPS = _timer->timer1_prescaler_value);
[e = . . _T1CONbits 1 4 . *U __timer 3 ]
"54
[; ;hal_timer1.c: 54:         Timer1_Mode_Selection(_timer);
[e ( _Timer1_Mode_Selection (1 __timer ]
"56
[; ;hal_timer1.c: 56:         TMR1H = (_timer->timer1_preload_value) >> 8;
[e = _TMR1H -> >> -> . *U __timer 2 `ui -> 8 `i `uc ]
"57
[; ;hal_timer1.c: 57:         TMR1L = (uint8_t)(_timer->timer1_preload_value);
[e = _TMR1L -> . *U __timer 2 `uc ]
"58
[; ;hal_timer1.c: 58:         timer1_preload = _timer->timer1_preload_value;
[e = _timer1_preload . *U __timer 2 ]
"61
[; ;hal_timer1.c: 61:         (PIE1bits.TMR1IE = 1);
[e = . . _PIE1bits 0 0 -> -> 1 `i `uc ]
"62
[; ;hal_timer1.c: 62:         (PIR1bits.TMR1IF = 0);
[e = . . _PIR1bits 0 0 -> -> 0 `i `uc ]
"63
[; ;hal_timer1.c: 63:         TMR1_InterruptHandler = _timer->TMR1_InterruptHandler;
[e = _TMR1_InterruptHandler . *U __timer 0 ]
"79
[; ;hal_timer1.c: 79:         (INTCONbits.GIE = 1);
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"80
[; ;hal_timer1.c: 80:         (INTCONbits.PEIE = 1);
[e = . . _INTCONbits 1 6 -> -> 1 `i `uc ]
"84
[; ;hal_timer1.c: 84:         (T1CONbits.TMR1ON = 1);
[e = . . _T1CONbits 1 0 -> -> 1 `i `uc ]
"85
[; ;hal_timer1.c: 85:         ret = 1;
[e = _ret -> -> 1 `i `uc ]
"86
[; ;hal_timer1.c: 86:     }
}
[e :U 273 ]
"87
[; ;hal_timer1.c: 87:     return ret;
[e ) _ret ]
[e $UE 271  ]
"88
[; ;hal_timer1.c: 88: }
[e :UE 271 ]
}
"97
[; ;hal_timer1.c: 97: uint8_t Timer1_DeInit(const timer1_t *_timer)
[v _Timer1_DeInit `(uc ~T0 @X0 1 ef1`*CS270 ]
"98
[; ;hal_timer1.c: 98: {
{
[e :U _Timer1_DeInit ]
"97
[; ;hal_timer1.c: 97: uint8_t Timer1_DeInit(const timer1_t *_timer)
[v __timer `*CS270 ~T0 @X0 1 r1 ]
"98
[; ;hal_timer1.c: 98: {
[f ]
"99
[; ;hal_timer1.c: 99:     uint8_t ret = 0;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"100
[; ;hal_timer1.c: 100:     if(((void*)0) == _timer)
[e $ ! == -> -> -> 0 `i `*v `*CS270 __timer 275  ]
"101
[; ;hal_timer1.c: 101:     {
{
"102
[; ;hal_timer1.c: 102:         ret = 0;
[e = _ret -> -> 0 `i `uc ]
"103
[; ;hal_timer1.c: 103:     }
}
[e $U 276  ]
"104
[; ;hal_timer1.c: 104:     else
[e :U 275 ]
"105
[; ;hal_timer1.c: 105:     {
{
"107
[; ;hal_timer1.c: 107:         (T1CONbits.TMR1ON = 0);
[e = . . _T1CONbits 1 0 -> -> 0 `i `uc ]
"110
[; ;hal_timer1.c: 110:         (PIE1bits.TMR1IE = 0);
[e = . . _PIE1bits 0 0 -> -> 0 `i `uc ]
"112
[; ;hal_timer1.c: 112:         ret = 1;
[e = _ret -> -> 1 `i `uc ]
"113
[; ;hal_timer1.c: 113:     }
}
[e :U 276 ]
"114
[; ;hal_timer1.c: 114:     return ret;
[e ) _ret ]
[e $UE 274  ]
"115
[; ;hal_timer1.c: 115: }
[e :UE 274 ]
}
"125
[; ;hal_timer1.c: 125: uint8_t Timer1_Write_Value(const timer1_t *_timer, uint16_t _value)
[v _Timer1_Write_Value `(uc ~T0 @X0 1 ef2`*CS270`us ]
"126
[; ;hal_timer1.c: 126: {
{
[e :U _Timer1_Write_Value ]
"125
[; ;hal_timer1.c: 125: uint8_t Timer1_Write_Value(const timer1_t *_timer, uint16_t _value)
[v __timer `*CS270 ~T0 @X0 1 r1 ]
[v __value `us ~T0 @X0 1 r2 ]
"126
[; ;hal_timer1.c: 126: {
[f ]
"127
[; ;hal_timer1.c: 127:   uint8_t ret = 0;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"128
[; ;hal_timer1.c: 128:     if(((void*)0) == _timer)
[e $ ! == -> -> -> 0 `i `*v `*CS270 __timer 278  ]
"129
[; ;hal_timer1.c: 129:     {
{
"130
[; ;hal_timer1.c: 130:         ret = 0;
[e = _ret -> -> 0 `i `uc ]
"131
[; ;hal_timer1.c: 131:     }
}
[e $U 279  ]
"132
[; ;hal_timer1.c: 132:     else
[e :U 278 ]
"133
[; ;hal_timer1.c: 133:     {
{
"135
[; ;hal_timer1.c: 135:         TMR1H = (_value) >> 8;
[e = _TMR1H -> >> -> __value `ui -> 8 `i `uc ]
"136
[; ;hal_timer1.c: 136:         TMR1L = (uint8_t)(_value);
[e = _TMR1L -> __value `uc ]
"137
[; ;hal_timer1.c: 137:         ret = 1;
[e = _ret -> -> 1 `i `uc ]
"138
[; ;hal_timer1.c: 138:     }
}
[e :U 279 ]
"139
[; ;hal_timer1.c: 139:     return ret;
[e ) _ret ]
[e $UE 277  ]
"140
[; ;hal_timer1.c: 140: }
[e :UE 277 ]
}
"150
[; ;hal_timer1.c: 150: uint8_t Timer1_Read_Value(const timer1_t *_timer, uint16_t *_value)
[v _Timer1_Read_Value `(uc ~T0 @X0 1 ef2`*CS270`*us ]
"151
[; ;hal_timer1.c: 151: {
{
[e :U _Timer1_Read_Value ]
"150
[; ;hal_timer1.c: 150: uint8_t Timer1_Read_Value(const timer1_t *_timer, uint16_t *_value)
[v __timer `*CS270 ~T0 @X0 1 r1 ]
[v __value `*us ~T0 @X0 1 r2 ]
"151
[; ;hal_timer1.c: 151: {
[f ]
"152
[; ;hal_timer1.c: 152:     uint8_t ret = 0;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"153
[; ;hal_timer1.c: 153:     uint8_t l_tmr1l = 0;
[v _l_tmr1l `uc ~T0 @X0 1 a ]
[e = _l_tmr1l -> -> 0 `i `uc ]
"154
[; ;hal_timer1.c: 154:     uint8_t l_tmr1h = 0;
[v _l_tmr1h `uc ~T0 @X0 1 a ]
[e = _l_tmr1h -> -> 0 `i `uc ]
"155
[; ;hal_timer1.c: 155:     if((((void*)0) == _timer) || (((void*)0) == _value))
[e $ ! || == -> -> -> 0 `i `*v `*CS270 __timer == -> -> -> 0 `i `*v `*us __value 281  ]
"156
[; ;hal_timer1.c: 156:     {
{
"157
[; ;hal_timer1.c: 157:         ret = 0;
[e = _ret -> -> 0 `i `uc ]
"158
[; ;hal_timer1.c: 158:     }
}
[e $U 282  ]
"159
[; ;hal_timer1.c: 159:     else
[e :U 281 ]
"160
[; ;hal_timer1.c: 160:     {
{
"161
[; ;hal_timer1.c: 161:         l_tmr1l = TMR1L;
[e = _l_tmr1l _TMR1L ]
"162
[; ;hal_timer1.c: 162:         l_tmr1h = TMR1H;
[e = _l_tmr1h _TMR1H ]
"163
[; ;hal_timer1.c: 163:         *_value = (uint16_t)((l_tmr1h << 8) + l_tmr1l);
[e = *U __value -> + << -> _l_tmr1h `i -> 8 `i -> _l_tmr1l `i `us ]
"164
[; ;hal_timer1.c: 164:         ret = 1;
[e = _ret -> -> 1 `i `uc ]
"165
[; ;hal_timer1.c: 165:     }
}
[e :U 282 ]
"166
[; ;hal_timer1.c: 166:     return ret;
[e ) _ret ]
[e $UE 280  ]
"167
[; ;hal_timer1.c: 167: }
[e :UE 280 ]
}
"172
[; ;hal_timer1.c: 172: void TMR1_ISR(void)
[v _TMR1_ISR `(v ~T0 @X0 1 ef ]
"173
[; ;hal_timer1.c: 173: {
{
[e :U _TMR1_ISR ]
[f ]
"174
[; ;hal_timer1.c: 174:     (PIR1bits.TMR1IF = 0);
[e = . . _PIR1bits 0 0 -> -> 0 `i `uc ]
"175
[; ;hal_timer1.c: 175:     TMR1H = (timer1_preload) >> 8;
[e = _TMR1H -> >> -> _timer1_preload `ui -> 8 `i `uc ]
"176
[; ;hal_timer1.c: 176:     TMR1L = (uint8_t)(timer1_preload);
[e = _TMR1L -> _timer1_preload `uc ]
"177
[; ;hal_timer1.c: 177:     if(TMR1_InterruptHandler)
[e $ ! != _TMR1_InterruptHandler -> -> 0 `i `*F2530 284  ]
"178
[; ;hal_timer1.c: 178:     {
{
"179
[; ;hal_timer1.c: 179:         TMR1_InterruptHandler();
[e ( *U _TMR1_InterruptHandler ..  ]
"180
[; ;hal_timer1.c: 180:     }
}
[e $U 285  ]
"181
[; ;hal_timer1.c: 181:     else{ }
[e :U 284 ]
{
}
[e :U 285 ]
"182
[; ;hal_timer1.c: 182: }
[e :UE 283 ]
}
[v F2532 `(v ~T0 @X0 1 tf1`*CS270 ]
"188
[; ;hal_timer1.c: 188: static __attribute__((inline)) void Timer1_Mode_Selection(const timer1_t *_timer)
[v _Timer1_Mode_Selection `TF2532 ~T0 @X0 1 s ]
"189
[; ;hal_timer1.c: 189: {
{
[e :U _Timer1_Mode_Selection ]
"188
[; ;hal_timer1.c: 188: static __attribute__((inline)) void Timer1_Mode_Selection(const timer1_t *_timer)
[v __timer `*CS270 ~T0 @X0 1 r1 ]
"189
[; ;hal_timer1.c: 189: {
[f ]
"190
[; ;hal_timer1.c: 190:     if(0 == _timer->timer1_mode)
[e $ ! == -> 0 `i -> . *U __timer 4 `i 287  ]
"191
[; ;hal_timer1.c: 191:     {
{
"192
[; ;hal_timer1.c: 192:         (T1CONbits.TMR1CS = 0);
[e = . . _T1CONbits 1 1 -> -> 0 `i `uc ]
"193
[; ;hal_timer1.c: 193:     }
}
[e $U 288  ]
"194
[; ;hal_timer1.c: 194:     else if(1 == _timer->timer1_mode)
[e :U 287 ]
[e $ ! == -> 1 `i -> . *U __timer 4 `i 289  ]
"195
[; ;hal_timer1.c: 195:     {
{
"196
[; ;hal_timer1.c: 196:         (T1CONbits.TMR1CS = 1);
[e = . . _T1CONbits 1 1 -> -> 1 `i `uc ]
"197
[; ;hal_timer1.c: 197:         if(1 == _timer->timer1_counter_mode)
[e $ ! == -> 1 `i -> . *U __timer 5 `i 290  ]
"198
[; ;hal_timer1.c: 198:         {
{
"199
[; ;hal_timer1.c: 199:             (T1CONbits.T1SYNC = 1);
[e = . . _T1CONbits 2 1 -> -> 1 `i `uc ]
"200
[; ;hal_timer1.c: 200:         }
}
[e $U 291  ]
"201
[; ;hal_timer1.c: 201:         else if(0 == _timer->timer1_counter_mode)
[e :U 290 ]
[e $ ! == -> 0 `i -> . *U __timer 5 `i 292  ]
"202
[; ;hal_timer1.c: 202:         {
{
"203
[; ;hal_timer1.c: 203:             (T1CONbits.T1SYNC = 0);
[e = . . _T1CONbits 2 1 -> -> 0 `i `uc ]
"204
[; ;hal_timer1.c: 204:         }
}
[e $U 293  ]
"205
[; ;hal_timer1.c: 205:         else{ }
[e :U 292 ]
{
}
[e :U 293 ]
[e :U 291 ]
"206
[; ;hal_timer1.c: 206:     }
}
[e $U 294  ]
"207
[; ;hal_timer1.c: 207:     else{ }
[e :U 289 ]
{
}
[e :U 294 ]
[e :U 288 ]
"208
[; ;hal_timer1.c: 208: }
[e :UE 286 ]
}
