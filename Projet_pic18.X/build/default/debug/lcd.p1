Version 4.0 HI-TECH Software Intermediate Code
"34 ./i2c_soft.h
[; ;./i2c_soft.h: 34: void I2C_Start();
[v _I2C_Start `(v ~T0 @X0 0 e? ]
"42
[; ;./i2c_soft.h: 42: void I2C_WriteToAddress(char deviceAddress);
[v _I2C_WriteToAddress `(v ~T0 @X0 0 ef1`uc ]
"39
[; ;./i2c_soft.h: 39: void I2C_WriteByte(char);
[v _I2C_WriteByte `(v ~T0 @X0 0 ef1`uc ]
"35
[; ;./i2c_soft.h: 35: void I2C_Stop();
[v _I2C_Stop `(v ~T0 @X0 0 e? ]
[v F192 `(v ~T0 @X0 1 tf1`ul ]
"12 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\builtins.h
[v __delay `JF192 ~T0 @X0 0 e ]
[p i __delay ]
"50 ./lcd.h
[; ;./lcd.h: 50:     void LCD_CMD(unsigned char CMD);
[v _LCD_CMD `(v ~T0 @X0 0 ef1`uc ]
"20 ./common.h
[p x OSC  =  XT          ]
"21
[p x FCMEN  =  OFF       ]
"22
[p x IESO  =  OFF        ]
"25
[p x PWRT  =  OFF        ]
"26
[p x BOREN  =  SBORDIS   ]
"27
[p x BORV  =  3          ]
"30
[p x WDT  =  OFF          ]
"31
[p x WDTPS  =  32768     ]
"34
[p x CCP2MX  =  PORTC    ]
"35
[p x PBADEN  =  ON       ]
"36
[p x LPT1OSC  =  OFF     ]
"37
[p x MCLRE  =  ON        ]
"40
[p x STVREN  =  ON       ]
"41
[p x LVP  =  ON          ]
"42
[p x XINST  =  OFF       ]
"45
[p x CP0  =  OFF         ]
"46
[p x CP1  =  OFF         ]
"47
[p x CP2  =  OFF         ]
"48
[p x CP3  =  OFF         ]
"51
[p x CPB  =  OFF         ]
"52
[p x CPD  =  OFF         ]
"55
[p x WRT0  =  OFF        ]
"56
[p x WRT1  =  OFF        ]
"57
[p x WRT2  =  OFF        ]
"58
[p x WRT3  =  OFF        ]
"61
[p x WRTC  =  OFF        ]
"62
[p x WRTB  =  OFF        ]
"63
[p x WRTD  =  OFF        ]
"66
[p x EBTR0  =  OFF       ]
"67
[p x EBTR1  =  OFF       ]
"68
[p x EBTR2  =  OFF       ]
"69
[p x EBTR3  =  OFF       ]
"72
[p x EBTRB  =  OFF       ]
"54 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc/pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
"4 lcd.c
[; ;lcd.c: 4: unsigned char RS, i2c_add, BackLight_State = 0x08;
[v _RS `uc ~T0 @X0 1 e ]
[v _i2c_add `uc ~T0 @X0 1 e ]
[v _BackLight_State `uc ~T0 @X0 1 e ]
[i _BackLight_State
-> -> 8 `i `uc
]
"12
[; ;lcd.c: 12: void LCD_Init(unsigned char I2C_Add)
[v _LCD_Init `(v ~T0 @X0 1 ef1`uc ]
"13
[; ;lcd.c: 13: {
{
[e :U _LCD_Init ]
"12
[; ;lcd.c: 12: void LCD_Init(unsigned char I2C_Add)
[v _I2C_Add `uc ~T0 @X0 1 r1 ]
"13
[; ;lcd.c: 13: {
[f ]
"14
[; ;lcd.c: 14:   i2c_add = I2C_Add;
[e = _i2c_add _I2C_Add ]
"15
[; ;lcd.c: 15:     I2C_Start();
[e ( _I2C_Start ..  ]
"16
[; ;lcd.c: 16:   I2C_WriteToAddress(i2c_add);
[e ( _I2C_WriteToAddress (1 -> _i2c_add `uc ]
"17
[; ;lcd.c: 17:   I2C_WriteByte(0 | BackLight_State);
[e ( _I2C_WriteByte (1 -> | -> 0 `i -> _BackLight_State `i `uc ]
"18
[; ;lcd.c: 18:   I2C_Stop();
[e ( _I2C_Stop ..  ]
"19
[; ;lcd.c: 19:   _delay((unsigned long)((30)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 30 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"20
[; ;lcd.c: 20:   LCD_CMD(0x03);
[e ( _LCD_CMD (1 -> -> 3 `i `uc ]
"21
[; ;lcd.c: 21:   _delay((unsigned long)((5)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"22
[; ;lcd.c: 22:   LCD_CMD(0x03);
[e ( _LCD_CMD (1 -> -> 3 `i `uc ]
"23
[; ;lcd.c: 23:   _delay((unsigned long)((5)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"24
[; ;lcd.c: 24:   LCD_CMD(0x03);
[e ( _LCD_CMD (1 -> -> 3 `i `uc ]
"25
[; ;lcd.c: 25:   _delay((unsigned long)((5)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"26
[; ;lcd.c: 26:   LCD_CMD(0x02);
[e ( _LCD_CMD (1 -> -> 2 `i `uc ]
"27
[; ;lcd.c: 27:   _delay((unsigned long)((5)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"28
[; ;lcd.c: 28:   LCD_CMD(0x20 | (2 << 2));
[e ( _LCD_CMD (1 -> | -> 32 `i << -> 2 `i -> 2 `i `uc ]
"29
[; ;lcd.c: 29:   _delay((unsigned long)((50)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"30
[; ;lcd.c: 30:   LCD_CMD(0x0C);
[e ( _LCD_CMD (1 -> -> 12 `i `uc ]
"31
[; ;lcd.c: 31:   _delay((unsigned long)((50)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"32
[; ;lcd.c: 32:   LCD_CMD(0x01);
[e ( _LCD_CMD (1 -> -> 1 `i `uc ]
"33
[; ;lcd.c: 33:   _delay((unsigned long)((50)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"34
[; ;lcd.c: 34:   LCD_CMD(0x04 | 0x02);
[e ( _LCD_CMD (1 -> | -> 4 `i -> 2 `i `uc ]
"35
[; ;lcd.c: 35:   _delay((unsigned long)((50)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"36
[; ;lcd.c: 36: }
[e :UE 271 ]
}
"48
[; ;lcd.c: 48: void LCD_Write_4Bit(unsigned char Nibble)
[v _LCD_Write_4Bit `(v ~T0 @X0 1 ef1`uc ]
"49
[; ;lcd.c: 49: {
{
[e :U _LCD_Write_4Bit ]
"48
[; ;lcd.c: 48: void LCD_Write_4Bit(unsigned char Nibble)
[v _Nibble `uc ~T0 @X0 1 r1 ]
"49
[; ;lcd.c: 49: {
[f ]
"51
[; ;lcd.c: 51:   Nibble |= RS;
[e =| _Nibble -> _RS `uc ]
"52
[; ;lcd.c: 52:   I2C_Start();
[e ( _I2C_Start ..  ]
"53
[; ;lcd.c: 53:   I2C_WriteToAddress(i2c_add);
[e ( _I2C_WriteToAddress (1 -> _i2c_add `uc ]
"54
[; ;lcd.c: 54:   I2C_WriteByte((Nibble | 0x04) | BackLight_State);
[e ( _I2C_WriteByte (1 -> | | -> _Nibble `i -> 4 `i -> _BackLight_State `i `uc ]
"55
[; ;lcd.c: 55:   I2C_Stop();
[e ( _I2C_Stop ..  ]
"58
[; ;lcd.c: 58:   I2C_Start();
[e ( _I2C_Start ..  ]
"59
[; ;lcd.c: 59:   I2C_WriteToAddress(i2c_add);
[e ( _I2C_WriteToAddress (1 -> _i2c_add `uc ]
"60
[; ;lcd.c: 60:   I2C_WriteByte((Nibble & 0xFB) | BackLight_State);
[e ( _I2C_WriteByte (1 -> | & -> _Nibble `i -> 251 `i -> _BackLight_State `i `uc ]
"61
[; ;lcd.c: 61:   I2C_Stop();
[e ( _I2C_Stop ..  ]
"62
[; ;lcd.c: 62:   _delay((unsigned long)((50)*(4000000/4000000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"63
[; ;lcd.c: 63: }
[e :UE 272 ]
}
"65
[; ;lcd.c: 65: void LCD_CMD(unsigned char CMD)
[v _LCD_CMD `(v ~T0 @X0 1 ef1`uc ]
"66
[; ;lcd.c: 66: {
{
[e :U _LCD_CMD ]
"65
[; ;lcd.c: 65: void LCD_CMD(unsigned char CMD)
[v _CMD `uc ~T0 @X0 1 r1 ]
"66
[; ;lcd.c: 66: {
[f ]
"67
[; ;lcd.c: 67:   RS = 0;
[e = _RS -> -> 0 `i `uc ]
"68
[; ;lcd.c: 68:   LCD_Write_4Bit(CMD & 0xF0);
[e ( _LCD_Write_4Bit (1 -> & -> _CMD `i -> 240 `i `uc ]
"69
[; ;lcd.c: 69:   LCD_Write_4Bit((CMD << 4) & 0xF0);
[e ( _LCD_Write_4Bit (1 -> & << -> _CMD `i -> 4 `i -> 240 `i `uc ]
"70
[; ;lcd.c: 70: }
[e :UE 273 ]
}
"72
[; ;lcd.c: 72: void LCD_Write_Char(char Data)
[v _LCD_Write_Char `(v ~T0 @X0 1 ef1`uc ]
"73
[; ;lcd.c: 73: {
{
[e :U _LCD_Write_Char ]
"72
[; ;lcd.c: 72: void LCD_Write_Char(char Data)
[v _Data `uc ~T0 @X0 1 r1 ]
"73
[; ;lcd.c: 73: {
[f ]
"74
[; ;lcd.c: 74:   RS = 1;
[e = _RS -> -> 1 `i `uc ]
"75
[; ;lcd.c: 75:   LCD_Write_4Bit(Data & 0xF0);
[e ( _LCD_Write_4Bit (1 -> & -> _Data `i -> 240 `i `uc ]
"76
[; ;lcd.c: 76:   LCD_Write_4Bit((Data << 4) & 0xF0);
[e ( _LCD_Write_4Bit (1 -> & << -> _Data `i -> 4 `i -> 240 `i `uc ]
"77
[; ;lcd.c: 77: }
[e :UE 274 ]
}
"79
[; ;lcd.c: 79: void LCD_Write_String(char* Str)
[v _LCD_Write_String `(v ~T0 @X0 1 ef1`*uc ]
"80
[; ;lcd.c: 80: {
{
[e :U _LCD_Write_String ]
"79
[; ;lcd.c: 79: void LCD_Write_String(char* Str)
[v _Str `*uc ~T0 @X0 1 r1 ]
"80
[; ;lcd.c: 80: {
[f ]
"81
[; ;lcd.c: 81:     for(int i=0; Str[i]!='\0'; i++)
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 279  ]
[e :U 276 ]
"82
[; ;lcd.c: 82:        LCD_Write_Char(Str[i]);
[e ( _LCD_Write_Char (1 *U + _Str * -> _i `x -> -> # *U _Str `i `x ]
[e ++ _i -> 1 `i ]
[e :U 279 ]
[e $ != -> *U + _Str * -> _i `x -> -> # *U _Str `i `x `ui -> 0 `ui 276  ]
[e :U 277 ]
}
"83
[; ;lcd.c: 83: }
[e :UE 275 ]
}
"85
[; ;lcd.c: 85: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL)
[v _LCD_Set_Cursor `(v ~T0 @X0 1 ef2`uc`uc ]
"86
[; ;lcd.c: 86: {
{
[e :U _LCD_Set_Cursor ]
"85
[; ;lcd.c: 85: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL)
[v _ROW `uc ~T0 @X0 1 r1 ]
[v _COL `uc ~T0 @X0 1 r2 ]
"86
[; ;lcd.c: 86: {
[f ]
"87
[; ;lcd.c: 87:   switch(ROW)
[e $U 282  ]
"88
[; ;lcd.c: 88:   {
{
"89
[; ;lcd.c: 89:     case 2:
[e :U 283 ]
"90
[; ;lcd.c: 90:       LCD_CMD(0xC0 + COL-1);
[e ( _LCD_CMD (1 -> - + -> 192 `i -> _COL `i -> 1 `i `uc ]
"91
[; ;lcd.c: 91:       break;
[e $U 281  ]
"92
[; ;lcd.c: 92:     case 3:
[e :U 284 ]
"93
[; ;lcd.c: 93:       LCD_CMD(0x94 + COL-1);
[e ( _LCD_CMD (1 -> - + -> 148 `i -> _COL `i -> 1 `i `uc ]
"94
[; ;lcd.c: 94:       break;
[e $U 281  ]
"95
[; ;lcd.c: 95:     case 4:
[e :U 285 ]
"96
[; ;lcd.c: 96:       LCD_CMD(0xD4 + COL-1);
[e ( _LCD_CMD (1 -> - + -> 212 `i -> _COL `i -> 1 `i `uc ]
"97
[; ;lcd.c: 97:       break;
[e $U 281  ]
"99
[; ;lcd.c: 99:     default:
[e :U 286 ]
"100
[; ;lcd.c: 100:       LCD_CMD(0x80 + COL-1);
[e ( _LCD_CMD (1 -> - + -> 128 `i -> _COL `i -> 1 `i `uc ]
"101
[; ;lcd.c: 101:   }
}
[e $U 281  ]
[e :U 282 ]
[e [\ -> _ROW `i , $ -> 2 `i 283
 , $ -> 3 `i 284
 , $ -> 4 `i 285
 286 ]
[e :U 281 ]
"102
[; ;lcd.c: 102: }
[e :UE 280 ]
}
"104
[; ;lcd.c: 104: void Backlight()
[v _Backlight `(v ~T0 @X0 1 ef ]
"105
[; ;lcd.c: 105: {
{
[e :U _Backlight ]
[f ]
"106
[; ;lcd.c: 106:   BackLight_State = 0x08;
[e = _BackLight_State -> -> 8 `i `uc ]
"107
[; ;lcd.c: 107:     I2C_Start();
[e ( _I2C_Start ..  ]
"108
[; ;lcd.c: 108:   I2C_WriteToAddress(i2c_add);
[e ( _I2C_WriteToAddress (1 -> _i2c_add `uc ]
"109
[; ;lcd.c: 109:   I2C_WriteByte(0 | BackLight_State);
[e ( _I2C_WriteByte (1 -> | -> 0 `i -> _BackLight_State `i `uc ]
"110
[; ;lcd.c: 110:   I2C_Stop();
[e ( _I2C_Stop ..  ]
"111
[; ;lcd.c: 111: }
[e :UE 287 ]
}
"113
[; ;lcd.c: 113: void noBacklight()
[v _noBacklight `(v ~T0 @X0 1 ef ]
"114
[; ;lcd.c: 114: {
{
[e :U _noBacklight ]
[f ]
"115
[; ;lcd.c: 115:   BackLight_State = 0x00;
[e = _BackLight_State -> -> 0 `i `uc ]
"116
[; ;lcd.c: 116:     I2C_Start();
[e ( _I2C_Start ..  ]
"117
[; ;lcd.c: 117:   I2C_WriteToAddress(i2c_add);
[e ( _I2C_WriteToAddress (1 -> _i2c_add `uc ]
"118
[; ;lcd.c: 118:   I2C_WriteByte(0 | BackLight_State);
[e ( _I2C_WriteByte (1 -> | -> 0 `i -> _BackLight_State `i `uc ]
"119
[; ;lcd.c: 119:   I2C_Stop();
[e ( _I2C_Stop ..  ]
"120
[; ;lcd.c: 120: }
[e :UE 288 ]
}
"122
[; ;lcd.c: 122: void LCD_SL()
[v _LCD_SL `(v ~T0 @X0 1 ef ]
"123
[; ;lcd.c: 123: {
{
[e :U _LCD_SL ]
[f ]
"124
[; ;lcd.c: 124:   LCD_CMD(0x18);
[e ( _LCD_CMD (1 -> -> 24 `i `uc ]
"125
[; ;lcd.c: 125:   _delay((unsigned long)((40)*(4000000/4000000.0)));
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"126
[; ;lcd.c: 126: }
[e :UE 289 ]
}
"128
[; ;lcd.c: 128: void LCD_SR()
[v _LCD_SR `(v ~T0 @X0 1 ef ]
"129
[; ;lcd.c: 129: {
{
[e :U _LCD_SR ]
[f ]
"130
[; ;lcd.c: 130:   LCD_CMD(0x1C);
[e ( _LCD_CMD (1 -> -> 28 `i `uc ]
"131
[; ;lcd.c: 131:   _delay((unsigned long)((40)*(4000000/4000000.0)));
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"132
[; ;lcd.c: 132: }
[e :UE 290 ]
}
"134
[; ;lcd.c: 134: void LCD_Clear()
[v _LCD_Clear `(v ~T0 @X0 1 ef ]
"135
[; ;lcd.c: 135: {
{
[e :U _LCD_Clear ]
[f ]
"136
[; ;lcd.c: 136:   LCD_CMD(0x01);
[e ( _LCD_CMD (1 -> -> 1 `i `uc ]
"137
[; ;lcd.c: 137:   _delay((unsigned long)((40)*(4000000/4000000.0)));
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"138
[; ;lcd.c: 138: }
[e :UE 291 ]
}
